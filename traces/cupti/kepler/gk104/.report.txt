Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : tex0_cache_sector_queries 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 183500, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 183500, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 51cac0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0 | SEL_D = 0 }
(r) register: 51cac8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0 }
(r) register: 51cac0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0 | SEL_D = 0 }
(r) register: 51cac8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0 }
(w) register: 51cac0, value: 00000005, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x5 | SEL_D = 0 }
(w) register: 51cac8, value: 00000003, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x3 }
(w) register: 51cac0, value: 00000005, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x5 | SEL_D = 0 }
(w) register: 51cac8, value: 00000003, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x3 }
(w) register: 18349c, value: 0000002a, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].CTRL[0x2] => { MODE = QUAD | CTR_MODE = UNK5 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 183440, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 183444, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183448, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 18344c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183450, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 183454, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183458, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 18345c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183440, value: ef080700, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_SRC[0x2] => { 0 = 0 | 1 = 0x7 | 2 = 0x8 | 3 = 0xef }
(w) register: 183444, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_OP[0x2] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183458, value: 06050400, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_SRC[0x2] => { 0 = 0 | 1 = 0x4 | 2 = 0x5 | 3 = 0x6 }
(w) register: 18345c, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 18349c, value: 0000002a, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].CTRL[0x2] => { MODE = QUAD | CTR_MODE = UNK5 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 183440, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 183444, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183448, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 18344c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183450, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 183454, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183458, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 18345c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183440, value: ef080700, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_SRC[0x2] => { 0 = 0 | 1 = 0x7 | 2 = 0x8 | 3 = 0xef }
(w) register: 183444, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_OP[0x2] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183458, value: 06050400, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_SRC[0x2] => { 0 = 0 | 1 = 0x4 | 2 = 0x5 | 3 = 0x6 }
(w) register: 18345c, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 51cac0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0 | SEL_D = 0 }
(r) register: 51cac8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0 }
(r) register: 51cab8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKB8 => { SEL = 0 }
(r) register: 51cac0, value: 00000005, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x5 | SEL_D = 0 }
(r) register: 51cac8, value: 00000003, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x3 }
(r) register: 51cab8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKB8 => { SEL = 0 }
(w) register: 51cac0, value: 80000005, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x5 | SEL_D = 0 | ENABLE }
(w) register: 51cac8, value: 80000003, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x3 | ENABLE }
(w) register: 51cab8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKB8 => { SEL = 0 | ENABLE }
(w) register: 51cac0, value: 80000005, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x5 | SEL_D = 0 | ENABLE }
(w) register: 51cac8, value: 80000003, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x3 | ENABLE }
(w) register: 51cab8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKB8 => { SEL = 0 | ENABLE }
(w) register: 18346c, value: 0000006d, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].SWAP_SRC[0x2] => 0x6d
(w) register: 18346c, value: 0000006d, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].SWAP_SRC[0x2] => 0x6d
(r) register: 18348c, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_PRE[0x2] => 0
(r) register: 183488, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_START[0x2] => 0
(r) register: 183480, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_EVENT[0x2] => 0
(r) register: 183490, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_STOP[0x2] => 0
(r) register: 183470, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_CYCLES[0x2] => 0
(r) register: 18348c, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_PRE[0x2] => 0
(r) register: 183488, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_START[0x2] => 0
(r) register: 183480, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_EVENT[0x2] => 0
(r) register: 183490, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_STOP[0x2] => 0
(r) register: 183470, value: 00001a33, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_CYCLES[0x2] => 0x1a33
(w) register: 1834a0, value: 00000001, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].QUAD_ACK_TRIGGER[0x2] => 0x1
(w) register: 1834a0, value: 00000001, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].QUAD_ACK_TRIGGER[0x2] => 0x1
Trace of 'tex0_cache_sector_queries' saved in file 'tex0_cache_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : tex1_cache_sector_queries 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 183500, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 183500, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 51cac0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0 | SEL_D = 0 }
(r) register: 51cac8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0 }
(r) register: 51cac0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0 | SEL_D = 0 }
(r) register: 51cac8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0 }
(w) register: 51cac0, value: 00000005, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x5 | SEL_D = 0 }
(w) register: 51cac8, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x4 }
(w) register: 51cac0, value: 00000005, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x5 | SEL_D = 0 }
(w) register: 51cac8, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x4 }
(w) register: 18349c, value: 0000002a, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].CTRL[0x2] => { MODE = QUAD | CTR_MODE = UNK5 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 183440, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 183444, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183448, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 18344c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183450, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 183454, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183458, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 18345c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183440, value: ef080700, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_SRC[0x2] => { 0 = 0 | 1 = 0x7 | 2 = 0x8 | 3 = 0xef }
(w) register: 183444, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_OP[0x2] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183458, value: 06050400, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_SRC[0x2] => { 0 = 0 | 1 = 0x4 | 2 = 0x5 | 3 = 0x6 }
(w) register: 18345c, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 18349c, value: 0000002a, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].CTRL[0x2] => { MODE = QUAD | CTR_MODE = UNK5 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 183440, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 183444, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183448, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 18344c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183450, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 183454, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183458, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 18345c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183440, value: ef080700, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_SRC[0x2] => { 0 = 0 | 1 = 0x7 | 2 = 0x8 | 3 = 0xef }
(w) register: 183444, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_OP[0x2] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183458, value: 06050400, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_SRC[0x2] => { 0 = 0 | 1 = 0x4 | 2 = 0x5 | 3 = 0x6 }
(w) register: 18345c, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 51cac0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0 | SEL_D = 0 }
(r) register: 51cac8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0 }
(r) register: 51cab8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKB8 => { SEL = 0 }
(r) register: 51cac0, value: 00000005, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x5 | SEL_D = 0 }
(r) register: 51cac8, value: 00000004, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x4 }
(r) register: 51cab8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKB8 => { SEL = 0 }
(w) register: 51cac0, value: 80000005, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x5 | SEL_D = 0 | ENABLE }
(w) register: 51cac8, value: 80000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x4 | ENABLE }
(w) register: 51cab8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKB8 => { SEL = 0 | ENABLE }
(w) register: 51cac0, value: 80000005, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x5 | SEL_D = 0 | ENABLE }
(w) register: 51cac8, value: 80000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x4 | ENABLE }
(w) register: 51cab8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKB8 => { SEL = 0 | ENABLE }
(w) register: 18346c, value: 0000006d, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].SWAP_SRC[0x2] => 0x6d
(w) register: 18346c, value: 0000006d, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].SWAP_SRC[0x2] => 0x6d
(r) register: 18348c, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_PRE[0x2] => 0
(r) register: 183488, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_START[0x2] => 0
(r) register: 183480, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_EVENT[0x2] => 0
(r) register: 183490, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_STOP[0x2] => 0
(r) register: 183470, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_CYCLES[0x2] => 0
(r) register: 18348c, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_PRE[0x2] => 0
(r) register: 183488, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_START[0x2] => 0
(r) register: 183480, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_EVENT[0x2] => 0
(r) register: 183490, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_STOP[0x2] => 0
(r) register: 183470, value: 000019f7, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_CYCLES[0x2] => 0x19f7
(w) register: 1834a0, value: 00000001, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].QUAD_ACK_TRIGGER[0x2] => 0x1
(w) register: 1834a0, value: 00000001, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].QUAD_ACK_TRIGGER[0x2] => 0x1
Trace of 'tex1_cache_sector_queries' saved in file 'tex1_cache_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : tex2_cache_sector_queries 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 183500, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 183500, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 51cac0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0 | SEL_D = 0 }
(r) register: 51cac8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0 }
(r) register: 51cac0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0 | SEL_D = 0 }
(r) register: 51cac8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0 }
(w) register: 51cac0, value: 00000005, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x5 | SEL_D = 0 }
(w) register: 51cac8, value: 00000003, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x3 }
(w) register: 51cac0, value: 00000005, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x5 | SEL_D = 0 }
(w) register: 51cac8, value: 00000003, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x3 }
(w) register: 18349c, value: 0000002a, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].CTRL[0x2] => { MODE = QUAD | CTR_MODE = UNK5 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 183440, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 183444, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183448, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 18344c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183450, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 183454, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183458, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 18345c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183440, value: ef121100, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_SRC[0x2] => { 0 = 0 | 1 = 0x11 | 2 = 0x12 | 3 = 0xef }
(w) register: 183444, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_OP[0x2] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183458, value: 100f0e00, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_SRC[0x2] => { 0 = 0 | 1 = 0xe | 2 = 0xf | 3 = 0x10 }
(w) register: 18345c, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 18349c, value: 0000002a, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].CTRL[0x2] => { MODE = QUAD | CTR_MODE = UNK5 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 183440, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 183444, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183448, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 18344c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183450, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 183454, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183458, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 18345c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183440, value: ef121100, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_SRC[0x2] => { 0 = 0 | 1 = 0x11 | 2 = 0x12 | 3 = 0xef }
(w) register: 183444, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_OP[0x2] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183458, value: 100f0e00, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_SRC[0x2] => { 0 = 0 | 1 = 0xe | 2 = 0xf | 3 = 0x10 }
(w) register: 18345c, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 51cac0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0 | SEL_D = 0 }
(r) register: 51cac8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0 }
(r) register: 51cab8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKB8 => { SEL = 0 }
(r) register: 51cac0, value: 00000005, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x5 | SEL_D = 0 }
(r) register: 51cac8, value: 00000003, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x3 }
(r) register: 51cab8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKB8 => { SEL = 0 }
(w) register: 51cac0, value: 80000005, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x5 | SEL_D = 0 | ENABLE }
(w) register: 51cac8, value: 80000003, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x3 | ENABLE }
(w) register: 51cab8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKB8 => { SEL = 0 | ENABLE }
(w) register: 51cac0, value: 80000005, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x5 | SEL_D = 0 | ENABLE }
(w) register: 51cac8, value: 80000003, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x3 | ENABLE }
(w) register: 51cab8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKB8 => { SEL = 0 | ENABLE }
(w) register: 18346c, value: 0000006d, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].SWAP_SRC[0x2] => 0x6d
(w) register: 18346c, value: 0000006d, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].SWAP_SRC[0x2] => 0x6d
(r) register: 18348c, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_PRE[0x2] => 0
(r) register: 183488, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_START[0x2] => 0
(r) register: 183480, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_EVENT[0x2] => 0
(r) register: 183490, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_STOP[0x2] => 0
(r) register: 183470, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_CYCLES[0x2] => 0
(r) register: 18348c, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_PRE[0x2] => 0
(r) register: 183488, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_START[0x2] => 0
(r) register: 183480, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_EVENT[0x2] => 0
(r) register: 183490, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_STOP[0x2] => 0
(r) register: 183470, value: 00001a37, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_CYCLES[0x2] => 0x1a37
(w) register: 1834a0, value: 00000001, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].QUAD_ACK_TRIGGER[0x2] => 0x1
(w) register: 1834a0, value: 00000001, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].QUAD_ACK_TRIGGER[0x2] => 0x1
Trace of 'tex2_cache_sector_queries' saved in file 'tex2_cache_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : tex3_cache_sector_queries 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 183500, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 183500, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 51cac0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0 | SEL_D = 0 }
(r) register: 51cac8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0 }
(r) register: 51cac0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0 | SEL_D = 0 }
(r) register: 51cac8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0 }
(w) register: 51cac0, value: 00000005, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x5 | SEL_D = 0 }
(w) register: 51cac8, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x4 }
(w) register: 51cac0, value: 00000005, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x5 | SEL_D = 0 }
(w) register: 51cac8, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x4 }
(w) register: 18349c, value: 0000002a, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].CTRL[0x2] => { MODE = QUAD | CTR_MODE = UNK5 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 183440, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 183444, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183448, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 18344c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183450, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 183454, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183458, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 18345c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183440, value: ef121100, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_SRC[0x2] => { 0 = 0 | 1 = 0x11 | 2 = 0x12 | 3 = 0xef }
(w) register: 183444, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_OP[0x2] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183458, value: 100f0e00, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_SRC[0x2] => { 0 = 0 | 1 = 0xe | 2 = 0xf | 3 = 0x10 }
(w) register: 18345c, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 18349c, value: 0000002a, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].CTRL[0x2] => { MODE = QUAD | CTR_MODE = UNK5 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 183440, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 183444, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183448, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 18344c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183450, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 183454, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183458, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 18345c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183440, value: ef121100, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_SRC[0x2] => { 0 = 0 | 1 = 0x11 | 2 = 0x12 | 3 = 0xef }
(w) register: 183444, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_OP[0x2] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183458, value: 100f0e00, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_SRC[0x2] => { 0 = 0 | 1 = 0xe | 2 = 0xf | 3 = 0x10 }
(w) register: 18345c, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 51cac0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0 | SEL_D = 0 }
(r) register: 51cac8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0 }
(r) register: 51cab8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKB8 => { SEL = 0 }
(r) register: 51cac0, value: 00000005, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x5 | SEL_D = 0 }
(r) register: 51cac8, value: 00000004, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x4 }
(r) register: 51cab8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKB8 => { SEL = 0 }
(w) register: 51cac0, value: 80000005, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x5 | SEL_D = 0 | ENABLE }
(w) register: 51cac8, value: 80000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x4 | ENABLE }
(w) register: 51cab8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKB8 => { SEL = 0 | ENABLE }
(w) register: 51cac0, value: 80000005, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x5 | SEL_D = 0 | ENABLE }
(w) register: 51cac8, value: 80000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x4 | ENABLE }
(w) register: 51cab8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKB8 => { SEL = 0 | ENABLE }
(w) register: 18346c, value: 0000006d, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].SWAP_SRC[0x2] => 0x6d
(w) register: 18346c, value: 0000006d, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].SWAP_SRC[0x2] => 0x6d
(r) register: 18348c, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_PRE[0x2] => 0
(r) register: 183488, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_START[0x2] => 0
(r) register: 183480, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_EVENT[0x2] => 0
(r) register: 183490, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_STOP[0x2] => 0
(r) register: 183470, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_CYCLES[0x2] => 0
(r) register: 18348c, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_PRE[0x2] => 0
(r) register: 183488, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_START[0x2] => 0
(r) register: 183480, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_EVENT[0x2] => 0
(r) register: 183490, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_STOP[0x2] => 0
(r) register: 183470, value: 00001a35, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_CYCLES[0x2] => 0x1a35
(w) register: 1834a0, value: 00000001, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].QUAD_ACK_TRIGGER[0x2] => 0x1
(w) register: 1834a0, value: 00000001, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].QUAD_ACK_TRIGGER[0x2] => 0x1
Trace of 'tex3_cache_sector_queries' saved in file 'tex3_cache_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : tex0_cache_sector_misses 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 183500, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 183500, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 51cac0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0 | SEL_D = 0 }
(r) register: 51cac8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0 }
(r) register: 51cac0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0 | SEL_D = 0 }
(r) register: 51cac8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0 }
(w) register: 51cac0, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x4 | SEL_D = 0 }
(w) register: 51cac8, value: 00000003, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x3 }
(w) register: 51cac0, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x4 | SEL_D = 0 }
(w) register: 51cac8, value: 00000003, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x3 }
(w) register: 18349c, value: 0000002a, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].CTRL[0x2] => { MODE = QUAD | CTR_MODE = UNK5 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 183440, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 183444, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183448, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 18344c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183450, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 183454, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183458, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 18345c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183440, value: ef040300, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_SRC[0x2] => { 0 = 0 | 1 = 0x3 | 2 = 0x4 | 3 = 0xef }
(w) register: 183444, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_OP[0x2] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183458, value: 02010000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0x1 | 3 = 0x2 }
(w) register: 18345c, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 18349c, value: 0000002a, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].CTRL[0x2] => { MODE = QUAD | CTR_MODE = UNK5 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 183440, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 183444, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183448, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 18344c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183450, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 183454, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183458, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 18345c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183440, value: ef040300, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_SRC[0x2] => { 0 = 0 | 1 = 0x3 | 2 = 0x4 | 3 = 0xef }
(w) register: 183444, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_OP[0x2] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183458, value: 02010000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0x1 | 3 = 0x2 }
(w) register: 18345c, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 51cac0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0 | SEL_D = 0 }
(r) register: 51cac8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0 }
(r) register: 51cab8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKB8 => { SEL = 0 }
(r) register: 51cac0, value: 00000004, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x4 | SEL_D = 0 }
(r) register: 51cac8, value: 00000003, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x3 }
(r) register: 51cab8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKB8 => { SEL = 0 }
(w) register: 51cac0, value: 80000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x4 | SEL_D = 0 | ENABLE }
(w) register: 51cac8, value: 80000003, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x3 | ENABLE }
(w) register: 51cab8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKB8 => { SEL = 0 | ENABLE }
(w) register: 51cac0, value: 80000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x4 | SEL_D = 0 | ENABLE }
(w) register: 51cac8, value: 80000003, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x3 | ENABLE }
(w) register: 51cab8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKB8 => { SEL = 0 | ENABLE }
(w) register: 18346c, value: 0000006d, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].SWAP_SRC[0x2] => 0x6d
(w) register: 18346c, value: 0000006d, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].SWAP_SRC[0x2] => 0x6d
(r) register: 18348c, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_PRE[0x2] => 0
(r) register: 183488, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_START[0x2] => 0
(r) register: 183480, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_EVENT[0x2] => 0
(r) register: 183490, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_STOP[0x2] => 0
(r) register: 183470, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_CYCLES[0x2] => 0
(r) register: 18348c, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_PRE[0x2] => 0
(r) register: 183488, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_START[0x2] => 0
(r) register: 183480, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_EVENT[0x2] => 0
(r) register: 183490, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_STOP[0x2] => 0
(r) register: 183470, value: 000019f0, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_CYCLES[0x2] => 0x19f0
(w) register: 1834a0, value: 00000001, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].QUAD_ACK_TRIGGER[0x2] => 0x1
(w) register: 1834a0, value: 00000001, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].QUAD_ACK_TRIGGER[0x2] => 0x1
Trace of 'tex0_cache_sector_misses' saved in file 'tex0_cache_sector_misses.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : tex1_cache_sector_misses 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 183500, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 183500, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 51cac0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0 | SEL_D = 0 }
(r) register: 51cac8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0 }
(r) register: 51cac0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0 | SEL_D = 0 }
(r) register: 51cac8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0 }
(w) register: 51cac0, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x4 | SEL_D = 0 }
(w) register: 51cac8, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x4 }
(w) register: 51cac0, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x4 | SEL_D = 0 }
(w) register: 51cac8, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x4 }
(w) register: 18349c, value: 0000002a, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].CTRL[0x2] => { MODE = QUAD | CTR_MODE = UNK5 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 183440, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 183444, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183448, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 18344c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183450, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 183454, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183458, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 18345c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183440, value: ef040300, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_SRC[0x2] => { 0 = 0 | 1 = 0x3 | 2 = 0x4 | 3 = 0xef }
(w) register: 183444, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_OP[0x2] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183458, value: 02010000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0x1 | 3 = 0x2 }
(w) register: 18345c, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 18349c, value: 0000002a, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].CTRL[0x2] => { MODE = QUAD | CTR_MODE = UNK5 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 183440, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 183444, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183448, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 18344c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183450, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 183454, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183458, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 18345c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183440, value: ef040300, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_SRC[0x2] => { 0 = 0 | 1 = 0x3 | 2 = 0x4 | 3 = 0xef }
(w) register: 183444, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_OP[0x2] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183458, value: 02010000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0x1 | 3 = 0x2 }
(w) register: 18345c, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 51cac0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0 | SEL_D = 0 }
(r) register: 51cac8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0 }
(r) register: 51cab8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKB8 => { SEL = 0 }
(r) register: 51cac0, value: 00000004, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x4 | SEL_D = 0 }
(r) register: 51cac8, value: 00000004, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x4 }
(r) register: 51cab8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKB8 => { SEL = 0 }
(w) register: 51cac0, value: 80000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x4 | SEL_D = 0 | ENABLE }
(w) register: 51cac8, value: 80000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x4 | ENABLE }
(w) register: 51cab8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKB8 => { SEL = 0 | ENABLE }
(w) register: 51cac0, value: 80000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x4 | SEL_D = 0 | ENABLE }
(w) register: 51cac8, value: 80000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x4 | ENABLE }
(w) register: 51cab8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKB8 => { SEL = 0 | ENABLE }
(w) register: 18346c, value: 0000006d, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].SWAP_SRC[0x2] => 0x6d
(w) register: 18346c, value: 0000006d, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].SWAP_SRC[0x2] => 0x6d
(r) register: 18348c, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_PRE[0x2] => 0
(r) register: 183488, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_START[0x2] => 0
(r) register: 183480, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_EVENT[0x2] => 0
(r) register: 183490, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_STOP[0x2] => 0
(r) register: 183470, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_CYCLES[0x2] => 0
(r) register: 18348c, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_PRE[0x2] => 0
(r) register: 183488, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_START[0x2] => 0
(r) register: 183480, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_EVENT[0x2] => 0
(r) register: 183490, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_STOP[0x2] => 0
(r) register: 183470, value: 00001a2e, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_CYCLES[0x2] => 0x1a2e
(w) register: 1834a0, value: 00000001, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].QUAD_ACK_TRIGGER[0x2] => 0x1
(w) register: 1834a0, value: 00000001, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].QUAD_ACK_TRIGGER[0x2] => 0x1
Trace of 'tex1_cache_sector_misses' saved in file 'tex1_cache_sector_misses.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : tex2_cache_sector_misses 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 183500, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 183500, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 51cac0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0 | SEL_D = 0 }
(r) register: 51cac8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0 }
(r) register: 51cac0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0 | SEL_D = 0 }
(r) register: 51cac8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0 }
(w) register: 51cac0, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x4 | SEL_D = 0 }
(w) register: 51cac8, value: 00000003, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x3 }
(w) register: 51cac0, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x4 | SEL_D = 0 }
(w) register: 51cac8, value: 00000003, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x3 }
(w) register: 18349c, value: 0000002a, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].CTRL[0x2] => { MODE = QUAD | CTR_MODE = UNK5 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 183440, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 183444, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183448, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 18344c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183450, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 183454, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183458, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 18345c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183440, value: ef0e0d00, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_SRC[0x2] => { 0 = 0 | 1 = 0xd | 2 = 0xe | 3 = 0xef }
(w) register: 183444, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_OP[0x2] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183458, value: 0c0b0a00, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_SRC[0x2] => { 0 = 0 | 1 = 0xa | 2 = 0xb | 3 = 0xc }
(w) register: 18345c, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 18349c, value: 0000002a, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].CTRL[0x2] => { MODE = QUAD | CTR_MODE = UNK5 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 183440, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 183444, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183448, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 18344c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183450, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 183454, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183458, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 18345c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183440, value: ef0e0d00, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_SRC[0x2] => { 0 = 0 | 1 = 0xd | 2 = 0xe | 3 = 0xef }
(w) register: 183444, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_OP[0x2] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183458, value: 0c0b0a00, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_SRC[0x2] => { 0 = 0 | 1 = 0xa | 2 = 0xb | 3 = 0xc }
(w) register: 18345c, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 51cac0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0 | SEL_D = 0 }
(r) register: 51cac8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0 }
(r) register: 51cab8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKB8 => { SEL = 0 }
(r) register: 51cac0, value: 00000004, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x4 | SEL_D = 0 }
(r) register: 51cac8, value: 00000003, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x3 }
(r) register: 51cab8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKB8 => { SEL = 0 }
(w) register: 51cac0, value: 80000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x4 | SEL_D = 0 | ENABLE }
(w) register: 51cac8, value: 80000003, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x3 | ENABLE }
(w) register: 51cab8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKB8 => { SEL = 0 | ENABLE }
(w) register: 51cac0, value: 80000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x4 | SEL_D = 0 | ENABLE }
(w) register: 51cac8, value: 80000003, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x3 | ENABLE }
(w) register: 51cab8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKB8 => { SEL = 0 | ENABLE }
(w) register: 18346c, value: 0000006d, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].SWAP_SRC[0x2] => 0x6d
(w) register: 18346c, value: 0000006d, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].SWAP_SRC[0x2] => 0x6d
(r) register: 18348c, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_PRE[0x2] => 0
(r) register: 183488, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_START[0x2] => 0
(r) register: 183480, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_EVENT[0x2] => 0
(r) register: 183490, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_STOP[0x2] => 0
(r) register: 183470, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_CYCLES[0x2] => 0
(r) register: 18348c, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_PRE[0x2] => 0
(r) register: 183488, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_START[0x2] => 0
(r) register: 183480, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_EVENT[0x2] => 0
(r) register: 183490, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_STOP[0x2] => 0
(r) register: 183470, value: 00001a06, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_CYCLES[0x2] => 0x1a06
(w) register: 1834a0, value: 00000001, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].QUAD_ACK_TRIGGER[0x2] => 0x1
(w) register: 1834a0, value: 00000001, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].QUAD_ACK_TRIGGER[0x2] => 0x1
Trace of 'tex2_cache_sector_misses' saved in file 'tex2_cache_sector_misses.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : tex3_cache_sector_misses 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 183500, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 183500, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 51cac0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0 | SEL_D = 0 }
(r) register: 51cac8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0 }
(r) register: 51cac0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0 | SEL_D = 0 }
(r) register: 51cac8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0 }
(w) register: 51cac0, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x4 | SEL_D = 0 }
(w) register: 51cac8, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x4 }
(w) register: 51cac0, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x4 | SEL_D = 0 }
(w) register: 51cac8, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x4 }
(w) register: 18349c, value: 0000002a, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].CTRL[0x2] => { MODE = QUAD | CTR_MODE = UNK5 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 183440, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 183444, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183448, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 18344c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183450, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 183454, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183458, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 18345c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183440, value: ef0e0d00, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_SRC[0x2] => { 0 = 0 | 1 = 0xd | 2 = 0xe | 3 = 0xef }
(w) register: 183444, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_OP[0x2] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183458, value: 0c0b0a00, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_SRC[0x2] => { 0 = 0 | 1 = 0xa | 2 = 0xb | 3 = 0xc }
(w) register: 18345c, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 18349c, value: 0000002a, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].CTRL[0x2] => { MODE = QUAD | CTR_MODE = UNK5 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 183440, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 183444, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183448, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 18344c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183450, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 183454, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183458, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 18345c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183440, value: ef0e0d00, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_SRC[0x2] => { 0 = 0 | 1 = 0xd | 2 = 0xe | 3 = 0xef }
(w) register: 183444, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_OP[0x2] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183458, value: 0c0b0a00, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_SRC[0x2] => { 0 = 0 | 1 = 0xa | 2 = 0xb | 3 = 0xc }
(w) register: 18345c, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 51cac0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0 | SEL_D = 0 }
(r) register: 51cac8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0 }
(r) register: 51cab8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKB8 => { SEL = 0 }
(r) register: 51cac0, value: 00000004, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x4 | SEL_D = 0 }
(r) register: 51cac8, value: 00000004, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x4 }
(r) register: 51cab8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKB8 => { SEL = 0 }
(w) register: 51cac0, value: 80000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x4 | SEL_D = 0 | ENABLE }
(w) register: 51cac8, value: 80000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x4 | ENABLE }
(w) register: 51cab8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKB8 => { SEL = 0 | ENABLE }
(w) register: 51cac0, value: 80000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_MUX_C_D => { SEL_C = 0x4 | SEL_D = 0 | ENABLE }
(w) register: 51cac8, value: 80000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKC8 => { SEL = 0x4 | ENABLE }
(w) register: 51cab8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].TEX.PM_UNKB8 => { SEL = 0 | ENABLE }
(w) register: 18346c, value: 0000006d, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].SWAP_SRC[0x2] => 0x6d
(w) register: 18346c, value: 0000006d, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].SWAP_SRC[0x2] => 0x6d
(r) register: 18348c, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_PRE[0x2] => 0
(r) register: 183488, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_START[0x2] => 0
(r) register: 183480, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_EVENT[0x2] => 0
(r) register: 183490, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_STOP[0x2] => 0
(r) register: 183470, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_CYCLES[0x2] => 0
(r) register: 18348c, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_PRE[0x2] => 0
(r) register: 183488, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_START[0x2] => 0
(r) register: 183480, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_EVENT[0x2] => 0
(r) register: 183490, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_STOP[0x2] => 0
(r) register: 183470, value: 00001991, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_CYCLES[0x2] => 0x1991
(w) register: 1834a0, value: 00000001, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].QUAD_ACK_TRIGGER[0x2] => 0x1
(w) register: 1834a0, value: 00000001, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].QUAD_ACK_TRIGGER[0x2] => 0x1
Trace of 'tex3_cache_sector_misses' saved in file 'tex3_cache_sector_misses.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : elapsed_cycles_sm 
Event Value : 6661
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 183500, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 183500, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 18349c, value: 00000002, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].CTRL[0x2] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 183440, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 183444, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183448, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 18344c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183450, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 183454, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183458, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 18345c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 18349c, value: 00000002, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].CTRL[0x2] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 183440, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 183444, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183448, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 18344c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183450, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 183454, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 183458, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 18345c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 18346c, value: 0000006d, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].SWAP_SRC[0x2] => 0x6d
(w) register: 18346c, value: 0000006d, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].SWAP_SRC[0x2] => 0x6d
(r) register: 18348c, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_PRE[0x2] => 0
(r) register: 183488, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_START[0x2] => 0
(r) register: 183480, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_EVENT[0x2] => 0
(r) register: 183490, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_STOP[0x2] => 0
(r) register: 183470, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_CYCLES[0x2] => 0
(r) register: 18348c, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_PRE[0x2] => 0
(r) register: 183488, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_START[0x2] => 0
(r) register: 183480, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_EVENT[0x2] => 0
(r) register: 183490, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_STOP[0x2] => 0
(r) register: 183470, value: 00001a05, mask: 00000000 ==> PCOUNTER.GPC_DOM[0x3].CTR_CYCLES[0x2] => 0x1a05
(w) register: 1834a0, value: 00000001, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].QUAD_ACK_TRIGGER[0x2] => 0x1
(w) register: 1834a0, value: 00000001, mask: ffffffff <== PCOUNTER.GPC_DOM[0x3].QUAD_ACK_TRIGGER[0x2] => 0x1
Trace of 'elapsed_cycles_sm' saved in file 'elapsed_cycles_sm.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : fb_subp0_read_sectors 
Event Value : 1212
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 10f100, value: 00000000, mask: 00000000 ==> PBFB_BROADCAST.PM_UNK100 => 0
(r) register: 10f100, value: 00000000, mask: 00000000 ==> PBFB_BROADCAST.PM_UNK100 => 0
(w) register: 10f100, value: 00000110, mask: ffffffff <== PBFB_BROADCAST.PM_UNK100 => 0x110
(w) register: 10f100, value: 00000110, mask: ffffffff <== PBFB_BROADCAST.PM_UNK100 => 0x110
(w) register: 1a009c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 10f100, value: 00000000, mask: 00000000 ==> PBFB_BROADCAST.PM_UNK100 => 0
(r) register: 10f100, value: 00000110, mask: 00000000 ==> PBFB_BROADCAST.PM_UNK100 => 0x110
(w) register: 10f100, value: 00000111, mask: ffffffff <== PBFB_BROADCAST.PM_UNK100 => 0x111
(w) register: 10f100, value: 00000111, mask: ffffffff <== PBFB_BROADCAST.PM_UNK100 => 0x111
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 000004bc, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0x4bc
(r) register: 1a0070, value: 00001a19, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x1a19
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'fb_subp0_read_sectors' saved in file 'fb_subp0_read_sectors.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : fb_subp1_read_sectors 
Event Value : 1268
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 10f100, value: 00000000, mask: 00000000 ==> PBFB_BROADCAST.PM_UNK100 => 0
(r) register: 10f100, value: 00000000, mask: 00000000 ==> PBFB_BROADCAST.PM_UNK100 => 0
(w) register: 10f100, value: 00000120, mask: ffffffff <== PBFB_BROADCAST.PM_UNK100 => 0x120
(w) register: 10f100, value: 00000120, mask: ffffffff <== PBFB_BROADCAST.PM_UNK100 => 0x120
(w) register: 1a009c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 10f100, value: 00000000, mask: 00000000 ==> PBFB_BROADCAST.PM_UNK100 => 0
(r) register: 10f100, value: 00000120, mask: 00000000 ==> PBFB_BROADCAST.PM_UNK100 => 0x120
(w) register: 10f100, value: 00000121, mask: ffffffff <== PBFB_BROADCAST.PM_UNK100 => 0x121
(w) register: 10f100, value: 00000121, mask: ffffffff <== PBFB_BROADCAST.PM_UNK100 => 0x121
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 000004f4, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0x4f4
(r) register: 1a0070, value: 00001a0f, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x1a0f
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'fb_subp1_read_sectors' saved in file 'fb_subp1_read_sectors.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : fb_subp0_write_sectors 
Event Value : 792
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 10f100, value: 00000000, mask: 00000000 ==> PBFB_BROADCAST.PM_UNK100 => 0
(r) register: 10f100, value: 00000000, mask: 00000000 ==> PBFB_BROADCAST.PM_UNK100 => 0
(w) register: 10f100, value: 00000110, mask: ffffffff <== PBFB_BROADCAST.PM_UNK100 => 0x110
(w) register: 10f100, value: 00000110, mask: ffffffff <== PBFB_BROADCAST.PM_UNK100 => 0x110
(w) register: 1a009c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0x1 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0x1 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 10f100, value: 00000000, mask: 00000000 ==> PBFB_BROADCAST.PM_UNK100 => 0
(r) register: 10f100, value: 00000110, mask: 00000000 ==> PBFB_BROADCAST.PM_UNK100 => 0x110
(w) register: 10f100, value: 00000111, mask: ffffffff <== PBFB_BROADCAST.PM_UNK100 => 0x111
(w) register: 10f100, value: 00000111, mask: ffffffff <== PBFB_BROADCAST.PM_UNK100 => 0x111
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000318, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0x318
(r) register: 1a0070, value: 00001997, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x1997
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'fb_subp0_write_sectors' saved in file 'fb_subp0_write_sectors.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : fb_subp1_write_sectors 
Event Value : 786
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 10f100, value: 00000000, mask: 00000000 ==> PBFB_BROADCAST.PM_UNK100 => 0
(r) register: 10f100, value: 00000000, mask: 00000000 ==> PBFB_BROADCAST.PM_UNK100 => 0
(w) register: 10f100, value: 00000120, mask: ffffffff <== PBFB_BROADCAST.PM_UNK100 => 0x120
(w) register: 10f100, value: 00000120, mask: ffffffff <== PBFB_BROADCAST.PM_UNK100 => 0x120
(w) register: 1a009c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0x1 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0x1 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 10f100, value: 00000000, mask: 00000000 ==> PBFB_BROADCAST.PM_UNK100 => 0
(r) register: 10f100, value: 00000120, mask: 00000000 ==> PBFB_BROADCAST.PM_UNK100 => 0x120
(w) register: 10f100, value: 00000121, mask: ffffffff <== PBFB_BROADCAST.PM_UNK100 => 0x121
(w) register: 10f100, value: 00000121, mask: ffffffff <== PBFB_BROADCAST.PM_UNK100 => 0x121
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000312, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0x312
(r) register: 1a0070, value: 00001a05, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x1a05
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'fb_subp1_write_sectors' saved in file 'fb_subp1_write_sectors.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp0_write_sector_misses 
Event Value : 396
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000060, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x60
(w) register: 140028, value: 00000000, mask: ffffffff <== PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000060, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x60
(w) register: 140028, value: 00000000, mask: ffffffff <== PMFB[0].PM_UNK28 => 0
(w) register: 1a009c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000015, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0x15 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000015, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0x15 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000060, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0x60
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000061, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x61
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000001, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x1
(w) register: 14125c, value: 00000061, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x61
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000001, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x1
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 0000018c, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0x18c
(r) register: 1a0070, value: 0000199a, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x199a
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp0_write_sector_misses' saved in file 'l2_subp0_write_sector_misses.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp1_write_sector_misses 
Event Value : 396
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000060, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x60
(w) register: 140028, value: 00000010, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x10
(w) register: 14125c, value: 00000060, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x60
(w) register: 140028, value: 00000010, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x10
(w) register: 1a009c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000015, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0x15 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000015, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0x15 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000060, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0x60
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000010, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0x10
(w) register: 14125c, value: 00000060, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x60
(w) register: 14165c, value: 00000061, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0x61
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000011, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x11
(w) register: 14125c, value: 00000060, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x60
(w) register: 14165c, value: 00000061, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0x61
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000011, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x11
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 0000018c, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0x18c
(r) register: 1a0070, value: 00001a43, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x1a43
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp1_write_sector_misses' saved in file 'l2_subp1_write_sector_misses.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp2_write_sector_misses 
Event Value : 394
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000060, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x60
(w) register: 140028, value: 00000020, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x20
(w) register: 14125c, value: 00000060, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x60
(w) register: 140028, value: 00000020, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x20
(w) register: 1a009c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000015, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0x15 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000015, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0x15 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000060, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0x60
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000020, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0x20
(w) register: 14125c, value: 00000060, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x60
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000061, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0x61
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000021, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x21
(w) register: 14125c, value: 00000060, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x60
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000061, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0x61
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000021, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x21
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 0000018a, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0x18a
(r) register: 1a0070, value: 000019a8, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x19a8
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp2_write_sector_misses' saved in file 'l2_subp2_write_sector_misses.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp3_write_sector_misses 
Event Value : 392
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000060, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x60
(w) register: 140028, value: 00000030, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x30
(w) register: 14125c, value: 00000060, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x60
(w) register: 140028, value: 00000030, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x30
(w) register: 1a009c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000015, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0x15 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000015, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0x15 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000060, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0x60
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000030, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0x30
(w) register: 14125c, value: 00000060, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x60
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000061, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0x61
(w) register: 140028, value: 00000031, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x31
(w) register: 14125c, value: 00000060, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x60
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000061, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0x61
(w) register: 140028, value: 00000031, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x31
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000188, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0x188
(r) register: 1a0070, value: 000019f3, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x19f3
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp3_write_sector_misses' saved in file 'l2_subp3_write_sector_misses.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp0_read_sector_misses 
Event Value : 612
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000060, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x60
(w) register: 140028, value: 00000000, mask: ffffffff <== PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000060, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x60
(w) register: 140028, value: 00000000, mask: ffffffff <== PMFB[0].PM_UNK28 => 0
(w) register: 1a009c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000016, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0x16 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000016, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0x16 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000060, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0x60
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000061, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x61
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000001, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x1
(w) register: 14125c, value: 00000061, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x61
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000001, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x1
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000264, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0x264
(r) register: 1a0070, value: 00001a4b, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x1a4b
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp0_read_sector_misses' saved in file 'l2_subp0_read_sector_misses.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp1_read_sector_misses 
Event Value : 596
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000060, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x60
(w) register: 140028, value: 00000010, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x10
(w) register: 14125c, value: 00000060, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x60
(w) register: 140028, value: 00000010, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x10
(w) register: 1a009c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000016, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0x16 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000016, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0x16 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000060, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0x60
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000010, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0x10
(w) register: 14125c, value: 00000060, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x60
(w) register: 14165c, value: 00000061, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0x61
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000011, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x11
(w) register: 14125c, value: 00000060, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x60
(w) register: 14165c, value: 00000061, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0x61
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000011, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x11
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000254, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0x254
(r) register: 1a0070, value: 00001a00, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x1a00
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp1_read_sector_misses' saved in file 'l2_subp1_read_sector_misses.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp2_read_sector_misses 
Event Value : 640
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000060, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x60
(w) register: 140028, value: 00000020, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x20
(w) register: 14125c, value: 00000060, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x60
(w) register: 140028, value: 00000020, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x20
(w) register: 1a009c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000016, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0x16 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000016, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0x16 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000060, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0x60
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000020, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0x20
(w) register: 14125c, value: 00000060, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x60
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000061, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0x61
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000021, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x21
(w) register: 14125c, value: 00000060, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x60
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000061, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0x61
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000021, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x21
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000280, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0x280
(r) register: 1a0070, value: 00001a14, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x1a14
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp2_read_sector_misses' saved in file 'l2_subp2_read_sector_misses.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp3_read_sector_misses 
Event Value : 632
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000060, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x60
(w) register: 140028, value: 00000030, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x30
(w) register: 14125c, value: 00000060, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x60
(w) register: 140028, value: 00000030, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x30
(w) register: 1a009c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000016, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0x16 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000016, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0x16 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000060, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0x60
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000030, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0x30
(w) register: 14125c, value: 00000060, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x60
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000061, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0x61
(w) register: 140028, value: 00000031, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x31
(w) register: 14125c, value: 00000060, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x60
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000061, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0x61
(w) register: 140028, value: 00000031, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x31
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000278, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0x278
(r) register: 1a0070, value: 00001a09, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x1a09
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp3_read_sector_misses' saved in file 'l2_subp3_read_sector_misses.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp0_write_l1_sector_queries 
Event Value : 396
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000800, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x800
(w) register: 140028, value: 00000000, mask: ffffffff <== PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000800, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x800
(w) register: 140028, value: 00000000, mask: ffffffff <== PMFB[0].PM_UNK28 => 0
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00102612, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x26 | 2 = 0x10 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00102612, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x26 | 2 = 0x10 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000800, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0x800
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000801, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x801
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000001, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x1
(w) register: 14125c, value: 00000801, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x801
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000001, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x1
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 000019c6, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0x19c6
(r) register: 1a0080, value: 0000018c, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0x18c
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 000019c6, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x19c6
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp0_write_l1_sector_queries' saved in file 'l2_subp0_write_l1_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp1_write_l1_sector_queries 
Event Value : 396
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000800, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x800
(w) register: 140028, value: 00000212, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x212
(w) register: 14125c, value: 00000800, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x800
(w) register: 140028, value: 00000212, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x212
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00102612, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x26 | 2 = 0x10 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00102612, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x26 | 2 = 0x10 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000800, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0x800
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000212, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0x212
(w) register: 14125c, value: 00000800, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x800
(w) register: 14165c, value: 00000801, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0x801
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000213, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x213
(w) register: 14125c, value: 00000800, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x800
(w) register: 14165c, value: 00000801, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0x801
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000213, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x213
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 000019cd, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0x19cd
(r) register: 1a0080, value: 0000018c, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0x18c
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 000019cd, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x19cd
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp1_write_l1_sector_queries' saved in file 'l2_subp1_write_l1_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp2_write_l1_sector_queries 
Event Value : 394
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000800, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x800
(w) register: 140028, value: 00000424, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x424
(w) register: 14125c, value: 00000800, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x800
(w) register: 140028, value: 00000424, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x424
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00102612, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x26 | 2 = 0x10 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00102612, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x26 | 2 = 0x10 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000800, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0x800
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000424, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0x424
(w) register: 14125c, value: 00000800, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x800
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000801, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0x801
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000425, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x425
(w) register: 14125c, value: 00000800, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x800
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000801, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0x801
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000425, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x425
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 000019c9, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0x19c9
(r) register: 1a0080, value: 0000018a, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0x18a
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 000019c9, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x19c9
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp2_write_l1_sector_queries' saved in file 'l2_subp2_write_l1_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp3_write_l1_sector_queries 
Event Value : 392
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000800, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x800
(w) register: 140028, value: 00000636, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x636
(w) register: 14125c, value: 00000800, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x800
(w) register: 140028, value: 00000636, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x636
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00102612, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x26 | 2 = 0x10 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00102612, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x26 | 2 = 0x10 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000800, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0x800
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000636, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0x636
(w) register: 14125c, value: 00000800, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x800
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000801, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0x801
(w) register: 140028, value: 00000637, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x637
(w) register: 14125c, value: 00000800, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x800
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000801, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0x801
(w) register: 140028, value: 00000637, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x637
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00001a00, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0x1a00
(r) register: 1a0080, value: 00000188, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0x188
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00001a00, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x1a00
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp3_write_l1_sector_queries' saved in file 'l2_subp3_write_l1_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp0_read_l1_sector_queries 
Event Value : 780
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000800, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x800
(w) register: 140028, value: 00000000, mask: ffffffff <== PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000800, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x800
(w) register: 140028, value: 00000000, mask: ffffffff <== PMFB[0].PM_UNK28 => 0
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00102712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x10 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00102712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x10 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000800, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0x800
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000801, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x801
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000001, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x1
(w) register: 14125c, value: 00000801, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x801
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000001, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x1
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 000019aa, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0x19aa
(r) register: 1a0080, value: 0000030c, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0x30c
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 000019aa, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x19aa
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp0_read_l1_sector_queries' saved in file 'l2_subp0_read_l1_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp1_read_l1_sector_queries 
Event Value : 780
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000800, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x800
(w) register: 140028, value: 00000212, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x212
(w) register: 14125c, value: 00000800, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x800
(w) register: 140028, value: 00000212, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x212
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00102712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x10 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00102712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x10 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000800, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0x800
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000212, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0x212
(w) register: 14125c, value: 00000800, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x800
(w) register: 14165c, value: 00000801, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0x801
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000213, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x213
(w) register: 14125c, value: 00000800, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x800
(w) register: 14165c, value: 00000801, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0x801
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000213, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x213
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 000019e7, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0x19e7
(r) register: 1a0080, value: 0000030c, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0x30c
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 000019e7, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x19e7
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp1_read_l1_sector_queries' saved in file 'l2_subp1_read_l1_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp2_read_l1_sector_queries 
Event Value : 780
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000800, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x800
(w) register: 140028, value: 00000424, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x424
(w) register: 14125c, value: 00000800, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x800
(w) register: 140028, value: 00000424, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x424
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00102712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x10 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00102712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x10 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000800, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0x800
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000424, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0x424
(w) register: 14125c, value: 00000800, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x800
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000801, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0x801
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000425, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x425
(w) register: 14125c, value: 00000800, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x800
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000801, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0x801
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000425, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x425
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00001ccb, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0x1ccb
(r) register: 1a0080, value: 0000030c, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0x30c
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00001ccb, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x1ccb
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp2_read_l1_sector_queries' saved in file 'l2_subp2_read_l1_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp3_read_l1_sector_queries 
Event Value : 780
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000800, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x800
(w) register: 140028, value: 00000636, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x636
(w) register: 14125c, value: 00000800, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x800
(w) register: 140028, value: 00000636, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x636
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00102712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x10 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00102712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x10 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000800, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0x800
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000636, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0x636
(w) register: 14125c, value: 00000800, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x800
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000801, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0x801
(w) register: 140028, value: 00000637, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x637
(w) register: 14125c, value: 00000800, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x800
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000801, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0x801
(w) register: 140028, value: 00000637, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x637
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 000019b4, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0x19b4
(r) register: 1a0080, value: 0000030c, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0x30c
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 000019b4, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x19b4
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp3_read_l1_sector_queries' saved in file 'l2_subp3_read_l1_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp0_read_l1_hit_sectors 
Event Value : 152
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000802, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x802
(w) register: 140028, value: 00000000, mask: ffffffff <== PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000802, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x802
(w) register: 140028, value: 00000000, mask: ffffffff <== PMFB[0].PM_UNK28 => 0
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 18102712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x10 | 3 = 0x18 }
(w) register: 1a0054, value: 00008000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8000 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 18102712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x10 | 3 = 0x18 }
(w) register: 1a0054, value: 00008000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8000 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000802, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0x802
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000803, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x803
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000001, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x1
(w) register: 14125c, value: 00000803, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x803
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000001, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x1
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 0000196e, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0x196e
(r) register: 1a0080, value: 00000098, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0x98
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 0000196e, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x196e
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp0_read_l1_hit_sectors' saved in file 'l2_subp0_read_l1_hit_sectors.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp1_read_l1_hit_sectors 
Event Value : 172
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000802, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x802
(w) register: 140028, value: 00000212, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x212
(w) register: 14125c, value: 00000802, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x802
(w) register: 140028, value: 00000212, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x212
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 18102712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x10 | 3 = 0x18 }
(w) register: 1a0054, value: 00008000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8000 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 18102712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x10 | 3 = 0x18 }
(w) register: 1a0054, value: 00008000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8000 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000802, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0x802
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000212, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0x212
(w) register: 14125c, value: 00000802, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x802
(w) register: 14165c, value: 00000803, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0x803
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000213, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x213
(w) register: 14125c, value: 00000802, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x802
(w) register: 14165c, value: 00000803, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0x803
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000213, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x213
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 000019bc, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0x19bc
(r) register: 1a0080, value: 000000ac, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0xac
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 000019bc, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x19bc
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp1_read_l1_hit_sectors' saved in file 'l2_subp1_read_l1_hit_sectors.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp2_read_l1_hit_sectors 
Event Value : 144
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000802, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x802
(w) register: 140028, value: 00000424, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x424
(w) register: 14125c, value: 00000802, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x802
(w) register: 140028, value: 00000424, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x424
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 18102712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x10 | 3 = 0x18 }
(w) register: 1a0054, value: 00008000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8000 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 18102712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x10 | 3 = 0x18 }
(w) register: 1a0054, value: 00008000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8000 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000802, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0x802
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000424, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0x424
(w) register: 14125c, value: 00000802, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x802
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000803, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0x803
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000425, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x425
(w) register: 14125c, value: 00000802, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x802
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000803, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0x803
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000425, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x425
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00001985, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0x1985
(r) register: 1a0080, value: 00000090, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0x90
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00001985, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x1985
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp2_read_l1_hit_sectors' saved in file 'l2_subp2_read_l1_hit_sectors.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp3_read_l1_hit_sectors 
Event Value : 148
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000802, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x802
(w) register: 140028, value: 00000636, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x636
(w) register: 14125c, value: 00000802, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x802
(w) register: 140028, value: 00000636, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x636
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 18102712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x10 | 3 = 0x18 }
(w) register: 1a0054, value: 00008000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8000 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 18102712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x10 | 3 = 0x18 }
(w) register: 1a0054, value: 00008000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8000 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000802, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0x802
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000636, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0x636
(w) register: 14125c, value: 00000802, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x802
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000803, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0x803
(w) register: 140028, value: 00000637, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x637
(w) register: 14125c, value: 00000802, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x802
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000803, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0x803
(w) register: 140028, value: 00000637, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x637
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 000019a3, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0x19a3
(r) register: 1a0080, value: 00000094, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0x94
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 000019a3, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x19a3
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp3_read_l1_hit_sectors' saved in file 'l2_subp3_read_l1_hit_sectors.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp0_read_tex_sector_queries 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000600, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x600
(w) register: 140028, value: 00000000, mask: ffffffff <== PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000600, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x600
(w) register: 140028, value: 00000000, mask: ffffffff <== PMFB[0].PM_UNK28 => 0
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00102712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x10 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00102712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x10 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000600, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0x600
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000601, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x601
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000001, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x1
(w) register: 14125c, value: 00000601, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x601
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000001, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x1
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00001a0a, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0x1a0a
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00001a0a, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x1a0a
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp0_read_tex_sector_queries' saved in file 'l2_subp0_read_tex_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp1_read_tex_sector_queries 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000600, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x600
(w) register: 140028, value: 00000212, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x212
(w) register: 14125c, value: 00000600, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x600
(w) register: 140028, value: 00000212, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x212
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00102712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x10 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00102712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x10 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000600, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0x600
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000212, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0x212
(w) register: 14125c, value: 00000600, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x600
(w) register: 14165c, value: 00000601, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0x601
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000213, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x213
(w) register: 14125c, value: 00000600, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x600
(w) register: 14165c, value: 00000601, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0x601
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000213, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x213
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 000019ec, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0x19ec
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 000019ec, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x19ec
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp1_read_tex_sector_queries' saved in file 'l2_subp1_read_tex_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp2_read_tex_sector_queries 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000600, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x600
(w) register: 140028, value: 00000424, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x424
(w) register: 14125c, value: 00000600, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x600
(w) register: 140028, value: 00000424, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x424
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00102712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x10 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00102712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x10 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000600, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0x600
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000424, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0x424
(w) register: 14125c, value: 00000600, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x600
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000601, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0x601
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000425, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x425
(w) register: 14125c, value: 00000600, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x600
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000601, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0x601
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000425, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x425
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 000019ee, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0x19ee
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 000019ee, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x19ee
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp2_read_tex_sector_queries' saved in file 'l2_subp2_read_tex_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp3_read_tex_sector_queries 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000600, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x600
(w) register: 140028, value: 00000636, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x636
(w) register: 14125c, value: 00000600, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x600
(w) register: 140028, value: 00000636, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x636
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00102712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x10 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00102712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x10 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000600, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0x600
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000636, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0x636
(w) register: 14125c, value: 00000600, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x600
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000601, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0x601
(w) register: 140028, value: 00000637, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x637
(w) register: 14125c, value: 00000600, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x600
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000601, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0x601
(w) register: 140028, value: 00000637, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x637
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 000019aa, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0x19aa
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 000019aa, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x19aa
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp3_read_tex_sector_queries' saved in file 'l2_subp3_read_tex_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp0_read_tex_hit_sectors 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000602, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x602
(w) register: 140028, value: 00000000, mask: ffffffff <== PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000602, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x602
(w) register: 140028, value: 00000000, mask: ffffffff <== PMFB[0].PM_UNK28 => 0
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 18102712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x10 | 3 = 0x18 }
(w) register: 1a0054, value: 00008000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8000 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 18102712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x10 | 3 = 0x18 }
(w) register: 1a0054, value: 00008000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8000 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000602, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0x602
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000603, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x603
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000001, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x1
(w) register: 14125c, value: 00000603, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x603
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000001, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x1
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00001b6c, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0x1b6c
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00001b6c, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x1b6c
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp0_read_tex_hit_sectors' saved in file 'l2_subp0_read_tex_hit_sectors.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp1_read_tex_hit_sectors 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000602, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x602
(w) register: 140028, value: 00000212, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x212
(w) register: 14125c, value: 00000602, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x602
(w) register: 140028, value: 00000212, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x212
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 18102712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x10 | 3 = 0x18 }
(w) register: 1a0054, value: 00008000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8000 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 18102712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x10 | 3 = 0x18 }
(w) register: 1a0054, value: 00008000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8000 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000602, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0x602
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000212, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0x212
(w) register: 14125c, value: 00000602, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x602
(w) register: 14165c, value: 00000603, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0x603
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000213, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x213
(w) register: 14125c, value: 00000602, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x602
(w) register: 14165c, value: 00000603, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0x603
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000213, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x213
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00001a5e, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0x1a5e
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00001a5e, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x1a5e
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp1_read_tex_hit_sectors' saved in file 'l2_subp1_read_tex_hit_sectors.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp2_read_tex_hit_sectors 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000602, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x602
(w) register: 140028, value: 00000424, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x424
(w) register: 14125c, value: 00000602, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x602
(w) register: 140028, value: 00000424, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x424
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 18102712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x10 | 3 = 0x18 }
(w) register: 1a0054, value: 00008000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8000 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 18102712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x10 | 3 = 0x18 }
(w) register: 1a0054, value: 00008000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8000 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000602, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0x602
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000424, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0x424
(w) register: 14125c, value: 00000602, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x602
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000603, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0x603
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000425, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x425
(w) register: 14125c, value: 00000602, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x602
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000603, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0x603
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000425, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x425
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00001a8b, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0x1a8b
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00001a8b, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x1a8b
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp2_read_tex_hit_sectors' saved in file 'l2_subp2_read_tex_hit_sectors.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp3_read_tex_hit_sectors 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000602, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x602
(w) register: 140028, value: 00000636, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x636
(w) register: 14125c, value: 00000602, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x602
(w) register: 140028, value: 00000636, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x636
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 18102712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x10 | 3 = 0x18 }
(w) register: 1a0054, value: 00008000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8000 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 18102712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x10 | 3 = 0x18 }
(w) register: 1a0054, value: 00008000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8000 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000602, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0x602
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000636, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0x636
(w) register: 14125c, value: 00000602, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x602
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000603, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0x603
(w) register: 140028, value: 00000637, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x637
(w) register: 14125c, value: 00000602, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x602
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000603, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0x603
(w) register: 140028, value: 00000637, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x637
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00001a08, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0x1a08
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00001a08, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x1a08
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp3_read_tex_hit_sectors' saved in file 'l2_subp3_read_tex_hit_sectors.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp0_read_sysmem_sector_queries 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 140028, value: 00000000, mask: ffffffff <== PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 140028, value: 00000000, mask: ffffffff <== PMFB[0].PM_UNK28 => 0
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00212712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x21 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00212712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x21 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000001, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x1
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000001, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x1
(w) register: 14125c, value: 00000001, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x1
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000001, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x1
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 000019b7, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0x19b7
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 000019b7, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x19b7
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp0_read_sysmem_sector_queries' saved in file 'l2_subp0_read_sysmem_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp1_read_sysmem_sector_queries 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 140028, value: 00000012, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x12
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 140028, value: 00000012, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x12
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00212712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x21 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00212712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x21 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000012, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0x12
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 14165c, value: 00000001, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0x1
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000013, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x13
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 14165c, value: 00000001, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0x1
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000013, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x13
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00001a9a, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0x1a9a
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00001a9a, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x1a9a
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp1_read_sysmem_sector_queries' saved in file 'l2_subp1_read_sysmem_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp2_read_sysmem_sector_queries 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 140028, value: 00000024, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x24
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 140028, value: 00000024, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x24
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00212712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x21 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00212712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x21 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000024, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0x24
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000001, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0x1
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000025, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x25
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000001, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0x1
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000025, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x25
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00001957, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0x1957
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00001957, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x1957
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp2_read_sysmem_sector_queries' saved in file 'l2_subp2_read_sysmem_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp3_read_sysmem_sector_queries 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 140028, value: 00000036, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x36
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 140028, value: 00000036, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x36
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00212712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x21 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00212712, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x27 | 2 = 0x21 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000036, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0x36
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000001, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0x1
(w) register: 140028, value: 00000037, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x37
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000001, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0x1
(w) register: 140028, value: 00000037, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x37
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 000019fe, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0x19fe
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 000019fe, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x19fe
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp3_read_sysmem_sector_queries' saved in file 'l2_subp3_read_sysmem_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp0_write_sysmem_sector_queries 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 140028, value: 00000000, mask: ffffffff <== PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 140028, value: 00000000, mask: ffffffff <== PMFB[0].PM_UNK28 => 0
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00212612, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x26 | 2 = 0x21 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00212612, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x26 | 2 = 0x21 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000001, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x1
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000001, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x1
(w) register: 14125c, value: 00000001, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x1
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000001, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x1
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 000019a3, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0x19a3
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 000019a3, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x19a3
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp0_write_sysmem_sector_queries' saved in file 'l2_subp0_write_sysmem_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp1_write_sysmem_sector_queries 
Event Value : 1
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 140028, value: 00000012, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x12
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 140028, value: 00000012, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x12
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00212612, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x26 | 2 = 0x21 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00212612, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x26 | 2 = 0x21 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000012, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0x12
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 14165c, value: 00000001, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0x1
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000013, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x13
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 14165c, value: 00000001, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0x1
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000013, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x13
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 000019dd, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0x19dd
(r) register: 1a0080, value: 00000001, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0x1
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 000019dd, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x19dd
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp1_write_sysmem_sector_queries' saved in file 'l2_subp1_write_sysmem_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp2_write_sysmem_sector_queries 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 140028, value: 00000024, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x24
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 140028, value: 00000024, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x24
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00212612, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x26 | 2 = 0x21 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00212612, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x26 | 2 = 0x21 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000024, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0x24
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000001, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0x1
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000025, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x25
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000001, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0x1
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000025, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x25
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00001a0b, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0x1a0b
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00001a0b, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x1a0b
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp2_write_sysmem_sector_queries' saved in file 'l2_subp2_write_sysmem_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp3_write_sysmem_sector_queries 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 140028, value: 00000036, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x36
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 140028, value: 00000036, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x36
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00212612, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x26 | 2 = 0x21 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00212612, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x12 | 1 = 0x26 | 2 = 0x21 | 3 = 0 }
(w) register: 1a0054, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0x8080 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000036, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0x36
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000001, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0x1
(w) register: 140028, value: 00000037, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x37
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000001, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0x1
(w) register: 140028, value: 00000037, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x37
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 000019b4, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0x19b4
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 000019b4, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x19b4
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp3_write_sysmem_sector_queries' saved in file 'l2_subp3_write_sysmem_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp0_total_read_sector_queries 
Event Value : 784
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 140028, value: 00000000, mask: ffffffff <== PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 140028, value: 00000000, mask: ffffffff <== PMFB[0].PM_UNK28 => 0
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00122725, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x25 | 1 = 0x27 | 2 = 0x12 | 3 = 0 }
(w) register: 1a0054, value: 0000e0e0, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0xe0e0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00122725, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x25 | 1 = 0x27 | 2 = 0x12 | 3 = 0 }
(w) register: 1a0054, value: 0000e0e0, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0xe0e0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000001, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x1
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000001, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x1
(w) register: 14125c, value: 00000001, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x1
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000001, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x1
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 000019b5, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0x19b5
(r) register: 1a0080, value: 00000310, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0x310
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 000019b5, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x19b5
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp0_total_read_sector_queries' saved in file 'l2_subp0_total_read_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp1_total_read_sector_queries 
Event Value : 786
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 140028, value: 00000012, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x12
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 140028, value: 00000012, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x12
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00122725, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x25 | 1 = 0x27 | 2 = 0x12 | 3 = 0 }
(w) register: 1a0054, value: 0000e0e0, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0xe0e0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00122725, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x25 | 1 = 0x27 | 2 = 0x12 | 3 = 0 }
(w) register: 1a0054, value: 0000e0e0, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0xe0e0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000012, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0x12
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 14165c, value: 00000001, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0x1
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000013, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x13
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 14165c, value: 00000001, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0x1
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000013, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x13
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 0000191e, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0x191e
(r) register: 1a0080, value: 00000312, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0x312
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 0000191e, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x191e
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp1_total_read_sector_queries' saved in file 'l2_subp1_total_read_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp2_total_read_sector_queries 
Event Value : 780
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 140028, value: 00000024, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x24
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 140028, value: 00000024, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x24
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00122725, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x25 | 1 = 0x27 | 2 = 0x12 | 3 = 0 }
(w) register: 1a0054, value: 0000e0e0, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0xe0e0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00122725, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x25 | 1 = 0x27 | 2 = 0x12 | 3 = 0 }
(w) register: 1a0054, value: 0000e0e0, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0xe0e0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000024, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0x24
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000001, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0x1
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000025, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x25
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000001, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0x1
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000025, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x25
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 000019e7, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0x19e7
(r) register: 1a0080, value: 0000030c, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0x30c
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 000019e7, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x19e7
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp2_total_read_sector_queries' saved in file 'l2_subp2_total_read_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp3_total_read_sector_queries 
Event Value : 780
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 140028, value: 00000036, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x36
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 140028, value: 00000036, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x36
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00122725, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x25 | 1 = 0x27 | 2 = 0x12 | 3 = 0 }
(w) register: 1a0054, value: 0000e0e0, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0xe0e0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00122725, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x25 | 1 = 0x27 | 2 = 0x12 | 3 = 0 }
(w) register: 1a0054, value: 0000e0e0, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0xe0e0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000036, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0x36
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000001, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0x1
(w) register: 140028, value: 00000037, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x37
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000001, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0x1
(w) register: 140028, value: 00000037, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x37
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00001972, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0x1972
(r) register: 1a0080, value: 0000030c, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0x30c
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00001972, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x1972
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp3_total_read_sector_queries' saved in file 'l2_subp3_total_read_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp0_total_write_sector_queries 
Event Value : 396
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 140028, value: 00000000, mask: ffffffff <== PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 140028, value: 00000000, mask: ffffffff <== PMFB[0].PM_UNK28 => 0
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00122625, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x25 | 1 = 0x26 | 2 = 0x12 | 3 = 0 }
(w) register: 1a0054, value: 0000e0e0, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0xe0e0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00122625, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x25 | 1 = 0x26 | 2 = 0x12 | 3 = 0 }
(w) register: 1a0054, value: 0000e0e0, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0xe0e0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000001, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x1
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000001, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x1
(w) register: 14125c, value: 00000001, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0x1
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000001, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x1
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 0000198a, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0x198a
(r) register: 1a0080, value: 0000018c, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0x18c
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 0000198a, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x198a
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp0_total_write_sector_queries' saved in file 'l2_subp0_total_write_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp1_total_write_sector_queries 
Event Value : 396
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 140028, value: 00000012, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x12
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 140028, value: 00000012, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x12
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00122625, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x25 | 1 = 0x26 | 2 = 0x12 | 3 = 0 }
(w) register: 1a0054, value: 0000e0e0, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0xe0e0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00122625, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x25 | 1 = 0x26 | 2 = 0x12 | 3 = 0 }
(w) register: 1a0054, value: 0000e0e0, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0xe0e0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000012, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0x12
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 14165c, value: 00000001, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0x1
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000013, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x13
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 14165c, value: 00000001, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0x1
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000013, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x13
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 000019ec, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0x19ec
(r) register: 1a0080, value: 0000018c, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0x18c
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 000019ec, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x19ec
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp1_total_write_sector_queries' saved in file 'l2_subp1_total_write_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp2_total_write_sector_queries 
Event Value : 394
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 140028, value: 00000024, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x24
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 140028, value: 00000024, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x24
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00122625, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x25 | 1 = 0x26 | 2 = 0x12 | 3 = 0 }
(w) register: 1a0054, value: 0000e0e0, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0xe0e0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00122625, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x25 | 1 = 0x26 | 2 = 0x12 | 3 = 0 }
(w) register: 1a0054, value: 0000e0e0, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0xe0e0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000024, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0x24
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000001, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0x1
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000025, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x25
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000001, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0x1
(w) register: 141e5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0
(w) register: 140028, value: 00000025, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x25
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 000019b6, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0x19b6
(r) register: 1a0080, value: 0000018a, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0x18a
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 000019b6, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x19b6
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp2_total_write_sector_queries' saved in file 'l2_subp2_total_write_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp3_total_write_sector_queries 
Event Value : 392
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022548, value: 00000000, mask: 00000000 ==> PUNITS.HW_PART_DISABLE_MASK => 0
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000004, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x4
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 140028, value: 00000036, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x36
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 140028, value: 00000036, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x36
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00122625, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x25 | 1 = 0x26 | 2 = 0x12 | 3 = 0 }
(w) register: 1a0054, value: 0000e0e0, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0xe0e0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 0000000a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = EVENT_B4 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 0f0e0d0c, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0xc | 1 = 0xd | 2 = 0xe | 3 = 0xf }
(w) register: 1a004c, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00122625, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0x25 | 1 = 0x26 | 2 = 0x12 | 3 = 0 }
(w) register: 1a0054, value: 0000e0e0, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0xe0e0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 1410dc, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0 | CACHE_LINES = 0 | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0 }
(r) register: 1410dc, value: 401b0038, mask: 00000000 ==> PMFB[0].SUBP[0].CONFIG => { COMPTAGS_PER_CACHE_LINE = 0x38 | CACHE_LINES = 0x1b | CACHE_LINE_SIZE = 512 | SLICES_PER_FBP = 0x4 }
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000000, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0
(r) register: 14125c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0].PM_UNK25C => 0
(r) register: 14165c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x1].PM_UNK25C => 0
(r) register: 141a5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x2].PM_UNK25C => 0
(r) register: 141e5c, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP[0x3].PM_UNK25C => 0
(r) register: 140028, value: 00000036, mask: 00000000 ==> PMFB[0].PM_UNK28 => 0x36
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000001, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0x1
(w) register: 140028, value: 00000037, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x37
(w) register: 14125c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0].PM_UNK25C => 0
(w) register: 14165c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x1].PM_UNK25C => 0
(w) register: 141a5c, value: 00000000, mask: ffffffff <== PMFB[0].SUBP[0x2].PM_UNK25C => 0
(w) register: 141e5c, value: 00000001, mask: ffffffff <== PMFB[0].SUBP[0x3].PM_UNK25C => 0x1
(w) register: 140028, value: 00000037, mask: ffffffff <== PMFB[0].PM_UNK28 => 0x37
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(w) register: 1a006c, value: 0000004d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x4d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00001931, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0x1931
(r) register: 1a0080, value: 00000188, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0x188
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00001931, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x1931
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'l2_subp3_total_write_sector_queries' saved in file 'l2_subp3_total_write_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : gld_inst_8bit 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = 0x2 | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = 0x2 | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'gld_inst_8bit' saved in file 'gld_inst_8bit.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : gld_inst_16bit 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = 0x2 | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = 0x2 | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'gld_inst_16bit' saved in file 'gld_inst_16bit.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : gld_inst_32bit 
Event Value : 12960
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = 0x2 | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = 0x2 | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000c80, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0xc80
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000cc0, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0xcc0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000cc0, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0xcc0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000ca0, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0xca0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'gld_inst_32bit' saved in file 'gld_inst_32bit.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : gld_inst_64bit 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = 0x2 | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = 0x2 | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'gld_inst_64bit' saved in file 'gld_inst_64bit.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : gld_inst_128bit 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = 0x2 | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = 0x2 | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'gld_inst_128bit' saved in file 'gld_inst_128bit.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : gst_inst_8bit 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = 0x2 | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = 0x2 | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'gst_inst_8bit' saved in file 'gst_inst_8bit.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : gst_inst_16bit 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = 0x2 | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = 0x2 | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'gst_inst_16bit' saved in file 'gst_inst_16bit.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : gst_inst_32bit 
Event Value : 6144
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = 0x2 | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = 0x2 | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000600, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0x600
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000600, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0x600
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000600, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0x600
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000600, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0x600
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'gst_inst_32bit' saved in file 'gst_inst_32bit.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : gst_inst_64bit 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = 0x2 | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = 0x2 | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'gst_inst_64bit' saved in file 'gst_inst_64bit.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : gst_inst_128bit 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = 0x2 | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = 0x2 | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'gst_inst_128bit' saved in file 'gst_inst_128bit.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : prof_trigger_00 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = USER | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = USER | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'prof_trigger_00' saved in file 'prof_trigger_00.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : prof_trigger_01 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = USER | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x1 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = USER | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x1 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'prof_trigger_01' saved in file 'prof_trigger_01.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : prof_trigger_02 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = USER | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000008, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x2 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = USER | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000008, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x2 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'prof_trigger_02' saved in file 'prof_trigger_02.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : prof_trigger_03 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = USER | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 0000000c, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x3 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = USER | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 0000000c, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x3 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'prof_trigger_03' saved in file 'prof_trigger_03.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : prof_trigger_04 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = USER | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000010, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x4 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = USER | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000010, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x4 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'prof_trigger_04' saved in file 'prof_trigger_04.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : prof_trigger_05 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = USER | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000014, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x5 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = USER | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000014, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x5 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'prof_trigger_05' saved in file 'prof_trigger_05.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : prof_trigger_06 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = USER | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000018, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x6 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = USER | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000018, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x6 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'prof_trigger_06' saved in file 'prof_trigger_06.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : prof_trigger_07 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = USER | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 0000001c, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x7 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = USER | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 0000001c, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x7 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'prof_trigger_07' saved in file 'prof_trigger_07.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : warps_launched 
Event Value : 192
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000003, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = LAUNCH | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x1 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000003, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = LAUNCH | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x1 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000030, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0x30
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000030, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0x30
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000030, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0x30
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000030, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0x30
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'warps_launched' saved in file 'warps_launched.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : threads_launched 
Event Value : 6144
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000003, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = LAUNCH | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 398a4188, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x2 | GRP1 = 0 | SIG1 = 0x3 | GRP2 = 0 | SIG2 = 0x4 | GRP3 = 0 | SIG3 = 0x5 | GRP4 = 0 | SIG4 = 0x6 | GRP5 = 0 | SIG5 = 0x7 }
(w) register: 51ce04, value: 00000003, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = LAUNCH | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 398a4188, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x2 | GRP1 = 0 | SIG1 = 0x3 | GRP2 = 0 | SIG2 = 0x4 | GRP3 = 0 | SIG3 = 0x5 | GRP4 = 0 | SIG4 = 0x6 | GRP5 = 0 | SIG5 = 0x7 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000600, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0x600
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000600, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0x600
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000600, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0x600
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000600, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0x600
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'threads_launched' saved in file 'threads_launched.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : inst_issued1 
Event Value : 4207
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000005, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = ISSUE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x1 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000005, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = ISSUE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x1 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 0000041e, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0x41e
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000417, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0x417
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000421, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0x421
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000419, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0x419
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'inst_issued1' saved in file 'inst_issued1.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : inst_issued2 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000005, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = ISSUE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000008, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x2 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000005, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = ISSUE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000008, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x2 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'inst_issued2' saved in file 'inst_issued2.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : inst_executed 
Event Value : 3456
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = EXEC | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000398, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x6 | GRP1 = 0 | SIG1 = 0x7 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = EXEC | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000398, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x6 | GRP1 = 0 | SIG1 = 0x7 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000360, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0x360
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000360, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0x360
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000360, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0x360
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000360, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0x360
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'inst_executed' saved in file 'inst_executed.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : shared_load 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 0000001b, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = LDST | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 0000001b, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = LDST | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'shared_load' saved in file 'shared_load.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : shared_store 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 0000001b, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = LDST | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x1 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 0000001b, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = LDST | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x1 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'shared_store' saved in file 'shared_store.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : local_load 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 0000001b, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = LDST | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000008, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x2 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 0000001b, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = LDST | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000008, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x2 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'local_load' saved in file 'local_load.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : local_store 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 0000001b, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = LDST | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 0000000c, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x3 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 0000001b, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = LDST | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 0000000c, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x3 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'local_store' saved in file 'local_store.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : gld_request 
Event Value : 384
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 0000001b, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = LDST | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000010, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x4 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 0000001b, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = LDST | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000010, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x4 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000060, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0x60
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000060, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0x60
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000060, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0x60
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000060, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0x60
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'gld_request' saved in file 'gld_request.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : gst_request 
Event Value : 200
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 0000001b, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = LDST | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000014, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x5 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 0000001b, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = LDST | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000014, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x5 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000032, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0x32
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000032, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0x32
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000032, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0x32
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000032, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0x32
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'gst_request' saved in file 'gst_request.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : atom_count 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 0000001c, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = BRANCH | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 0000001c, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = BRANCH | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'atom_count' saved in file 'atom_count.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : atom_cas_count 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 0000001c, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = BRANCH | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x1 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 0000001c, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = BRANCH | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x1 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'atom_cas_count' saved in file 'atom_cas_count.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : gred_count 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 0000001c, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = BRANCH | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000008, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x2 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 0000001c, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = BRANCH | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000008, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x2 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'gred_count' saved in file 'gred_count.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : branch 
Event Value : 192
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 0000001c, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = BRANCH | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 0000000c, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x3 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 0000001c, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = BRANCH | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 0000000c, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x3 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000030, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0x30
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000030, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0x30
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000030, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0x30
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000030, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0x30
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'branch' saved in file 'branch.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : divergent_branch 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 0000001c, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = BRANCH | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000010, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x4 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 0000001c, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = BRANCH | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf30, value: 00000010, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x4 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(w) register: 51ce00, value: 00408000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x408000
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(r) register: 51ce78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(r) register: 51ce7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(r) register: 51ce80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'divergent_branch' saved in file 'divergent_branch.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : active_cycles 
Event Value : 5062
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = WARP | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = WARP | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(r) register: 51ce84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce84, value: 000013c6, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0x13c6
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'active_cycles' saved in file 'active_cycles.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : active_warps 
Event Value : 276554
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = WARP | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000222, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = B6 | 0 = B6 | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 00000104, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x1 | GRP1 = 0 | SIG1 = 0x2 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51cf44, value: 0000020c, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0x1] => { GRP0 = 0 | SIG0 = 0x3 | GRP1 = 0 | SIG1 = 0x4 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51cf48, value: 00000314, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0x2] => { GRP0 = 0 | SIG0 = 0x5 | GRP1 = 0 | SIG1 = 0x6 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = WARP | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000222, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = B6 | 0 = B6 | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 00000104, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x1 | GRP1 = 0 | SIG1 = 0x2 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51cf44, value: 0000020c, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0x1] => { GRP0 = 0 | SIG0 = 0x3 | GRP1 = 0 | SIG1 = 0x4 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51cf48, value: 00000314, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0x2] => { GRP0 = 0 | SIG0 = 0x5 | GRP1 = 0 | SIG1 = 0x6 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00400080, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00400080, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(r) register: 51ce84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce84, value: 00000c2d, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0xc2d
(r) register: 51ce88, value: 00000e8e, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0xe8e
(r) register: 51ce8c, value: 00001d5c, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0x1d5c
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'active_warps' saved in file 'active_warps.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : sm_cta_launched 
Event Value : 24
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = WARP | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 0000001c, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x7 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = WARP | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 0000001c, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x7 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(r) register: 51ce84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce84, value: 00000018, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0x18
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'sm_cta_launched' saved in file 'sm_cta_launched.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : local_load_transactions 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 0000000e, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = TRANSACTION | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 0000000e, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = TRANSACTION | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(r) register: 51cca8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS }
(r) register: 51cca8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS }
(w) register: 51cca8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS | ENABLE }
(w) register: 51cca8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS | ENABLE }
(r) register: 51ce84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'local_load_transactions' saved in file 'local_load_transactions.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : local_store_transactions 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 0000000e, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = TRANSACTION | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x1 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 0000000e, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = TRANSACTION | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x1 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(r) register: 51cca8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS }
(r) register: 51cca8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS }
(w) register: 51cca8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS | ENABLE }
(w) register: 51cca8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS | ENABLE }
(r) register: 51ce84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'local_store_transactions' saved in file 'local_store_transactions.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l1_shared_load_transactions 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 0000000e, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = TRANSACTION | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 00000008, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x2 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 0000000e, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = TRANSACTION | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 00000008, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x2 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(r) register: 51cca8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS }
(r) register: 51cca8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS }
(w) register: 51cca8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS | ENABLE }
(w) register: 51cca8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS | ENABLE }
(r) register: 51ce84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'l1_shared_load_transactions' saved in file 'l1_shared_load_transactions.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l1_shared_store_transactions 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 0000000e, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = TRANSACTION | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 0000000c, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x3 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 0000000e, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = TRANSACTION | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 0000000c, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x3 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(r) register: 51cca8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS }
(r) register: 51cca8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS }
(w) register: 51cca8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS | ENABLE }
(w) register: 51cca8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS | ENABLE }
(r) register: 51ce84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'l1_shared_store_transactions' saved in file 'l1_shared_store_transactions.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : __l1_global_load_transactions 
Event Value : 420
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 0000000f, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = 0xf | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 0000000f, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = 0xf | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(r) register: 51cca8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS }
(r) register: 51cca8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS }
(w) register: 51cca8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS | ENABLE }
(w) register: 51cca8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS | ENABLE }
(r) register: 51ce84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce84, value: 000001a4, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0x1a4
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of '__l1_global_load_transactions' saved in file '__l1_global_load_transactions.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : __l1_global_store_transactions 
Event Value : 200
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 0000000f, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = 0xf | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x1 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 0000000f, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = 0xf | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x1 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(r) register: 51cca8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS }
(r) register: 51cca8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS }
(w) register: 51cca8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS | ENABLE }
(w) register: 51cca8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS | ENABLE }
(r) register: 51ce84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce84, value: 000000c8, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0xc8
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of '__l1_global_store_transactions' saved in file '__l1_global_store_transactions.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l1_local_load_hit 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000010, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = L1 | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000010, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = L1 | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(r) register: 51cca8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS }
(r) register: 51cca8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS }
(w) register: 51cca8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS | ENABLE }
(w) register: 51cca8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS | ENABLE }
(r) register: 51ce84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'l1_local_load_hit' saved in file 'l1_local_load_hit.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l1_local_load_miss 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000010, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = L1 | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x1 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000010, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = L1 | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x1 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(r) register: 51cca8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS }
(r) register: 51cca8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS }
(w) register: 51cca8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS | ENABLE }
(w) register: 51cca8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS | ENABLE }
(r) register: 51ce84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'l1_local_load_miss' saved in file 'l1_local_load_miss.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l1_local_store_hit 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000010, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = L1 | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 00000008, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x2 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000010, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = L1 | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 00000008, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x2 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(r) register: 51cca8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS }
(r) register: 51cca8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS }
(w) register: 51cca8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS | ENABLE }
(w) register: 51cca8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS | ENABLE }
(r) register: 51ce84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'l1_local_store_hit' saved in file 'l1_local_store_hit.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l1_local_store_miss 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000010, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = L1 | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 0000000c, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x3 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000010, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = L1 | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 0000000c, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x3 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(r) register: 51cca8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS }
(r) register: 51cca8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS }
(w) register: 51cca8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS | ENABLE }
(w) register: 51cca8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS | ENABLE }
(r) register: 51ce84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'l1_local_store_miss' saved in file 'l1_local_store_miss.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l1_global_load_hit 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000010, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = L1 | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 00000010, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x4 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000010, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = L1 | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 00000010, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x4 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(r) register: 51cca8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS }
(r) register: 51cca8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS }
(w) register: 51cca8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS | ENABLE }
(w) register: 51cca8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS | ENABLE }
(r) register: 51ce84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'l1_global_load_hit' saved in file 'l1_global_load_hit.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : l1_global_load_miss 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000010, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = L1 | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 00000014, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x5 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000010, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = L1 | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 00000014, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x5 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(r) register: 51cca8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS }
(r) register: 51cca8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS }
(w) register: 51cca8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS | ENABLE }
(w) register: 51cca8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS | ENABLE }
(r) register: 51ce84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'l1_global_load_miss' saved in file 'l1_global_load_miss.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : uncached_global_load_transaction 
Event Value : 390
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000011, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = MEM | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000011, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = MEM | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(r) register: 51cca8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS }
(r) register: 51cca8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS }
(w) register: 51cca8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS | ENABLE }
(w) register: 51cca8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS | ENABLE }
(r) register: 51ce84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce84, value: 00000186, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0x186
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'uncached_global_load_transaction' saved in file 'uncached_global_load_transaction.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : global_store_transaction 
Event Value : 192
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000011, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = MEM | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x1 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000011, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = MEM | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x1 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(r) register: 51cca8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS }
(r) register: 51cca8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS }
(w) register: 51cca8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS | ENABLE }
(w) register: 51cca8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS | ENABLE }
(r) register: 51ce84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce84, value: 000000c0, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0xc0
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'global_store_transaction' saved in file 'global_store_transaction.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : shared_load_replay 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000008, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = REPLAY | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 00000008, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x2 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000008, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = REPLAY | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 00000008, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x2 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(r) register: 51cca8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS }
(r) register: 51cca8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS }
(w) register: 51cca8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS | ENABLE }
(w) register: 51cca8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS | ENABLE }
(r) register: 51ce84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'shared_load_replay' saved in file 'shared_load_replay.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : shared_store_replay 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000008, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = REPLAY | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 0000000c, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x3 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000008, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = REPLAY | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 0000000c, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x3 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(r) register: 51cca8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS }
(r) register: 51cca8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS }
(w) register: 51cca8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS | ENABLE }
(w) register: 51cca8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS | ENABLE }
(r) register: 51ce84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'shared_store_replay' saved in file 'shared_store_replay.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : global_ld_mem_divergence_replays 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000008, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = REPLAY | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 00000010, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x4 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000008, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = REPLAY | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 00000010, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x4 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(r) register: 51cca8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS }
(r) register: 51cca8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS }
(w) register: 51cca8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS | ENABLE }
(w) register: 51cca8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS | ENABLE }
(r) register: 51ce84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'global_ld_mem_divergence_replays' saved in file 'global_ld_mem_divergence_replays.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 770
Launching kernel: blocks 196, thread/block 256
Event Name : global_st_mem_divergence_replays 
Event Value : 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 419eac, value: 00000000, mask: 00000004 <== PGRAPH.GPC_BROADCAST.TPC_ALL.MP.CTX_UNK0AC => 0
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000008, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = REPLAY | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 00000014, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x5 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(w) register: 51ce04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_SIGSEL => { 0 = NONE | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce08, value: 00000008, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SIGSEL => { 0 = REPLAY | 1 = NONE | 2 = NONE | 3 = NONE }
(w) register: 51ce5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_A_MODE => { 0 = LOGOP | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_MODE => { 0 = B6 | 0 = LOGOP | 0 = LOGOP | 0 = LOGOP }
(w) register: 51ce60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 51ce64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 51ce68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 51ce6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 51cf40, value: 00000014, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_B_SRCSEL[0] => { GRP0 = 0 | SIG0 = 0x5 | GRP1 = 0 | SIG1 = 0 | GRP2 = 0 | SIG2 = 0 | GRP3 = 0 | SIG3 = 0 | GRP4 = 0 | SIG4 = 0 | GRP5 = 0 | SIG5 = 0 }
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(r) register: 51ce00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(w) register: 51ce00, value: 00400080, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_UNK000 => 0x400080
(r) register: 51cca8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS }
(r) register: 51cca8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS }
(w) register: 51cca8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS | ENABLE }
(w) register: 51cca8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].L1.PM_MUX => { SEL = STATUS | ENABLE }
(r) register: 51ce84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(r) register: 51ce88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(r) register: 51ce8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(r) register: 51ce90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce70, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_A => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(r) register: 51ce94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER_OVERFLOW_B => { 0 }
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x4] => 0
(w) register: 51ce88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x5] => 0
(w) register: 51ce8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x6] => 0
(w) register: 51ce90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x7] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
(w) register: 51ce74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0] => 0
(w) register: 51ce78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x1] => 0
(w) register: 51ce7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x2] => 0
(w) register: 51ce80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0x3].TPC[0x1].MP.PM_COUNTER[0x3] => 0
Trace of 'global_st_mem_divergence_replays' saved in file 'global_st_mem_divergence_replays.trace'

