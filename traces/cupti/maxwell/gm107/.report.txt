Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : tex0_cache_sector_queries 
Event Value : 4548
(w) register: 180b00, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].FILTER[0x5] => { SRC_MASK = 0 }
(w) register: 180acc, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0CC[0x5][0] => 0
(w) register: 180ad0, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0CC[0x5][0x1] => 0
(w) register: 180ad4, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0D4[0x5] => { UNK0 = 0 }
(w) register: 180ad8, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0D8[0x5][0] => 0
(w) register: 180adc, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0D8[0x5][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 180b00, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].FILTER[0x5] => { SRC_MASK = 0 }
(w) register: 180acc, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0CC[0x5][0] => 0
(w) register: 180ad0, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0CC[0x5][0x1] => 0
(w) register: 180ad4, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0D4[0x5] => { UNK0 = 0 }
(w) register: 180ad8, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0D8[0x5][0] => 0
(w) register: 180adc, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0D8[0x5][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 505ac0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].TEX.PM_MUX_C_D => { SEL_C = 0 | SEL_D = 0 }
(r) register: 505ac0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].TEX.PM_MUX_C_D => { SEL_C = 0 | SEL_D = 0 }
(w) register: 505ac0, value: 00000005, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].TEX.PM_MUX_C_D => { SEL_C = 0x5 | SEL_D = 0 }
(w) register: 505ac0, value: 00000005, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].TEX.PM_MUX_C_D => { SEL_C = 0x5 | SEL_D = 0 }
(w) register: 180a9c, value: 00000032, mask: ffffffff <== PCOUNTER.GPC_DOM[0].CTRL[0x5] => { MODE = QUAD | CTR_MODE = 0x6 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 180a40, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].PRE_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a44, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].PRE_OP[0x5] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a48, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].START_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a4c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].START_OP[0x5] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a50, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].EVENT_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a54, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].EVENT_OP[0x5] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a58, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].STOP_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a5c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].STOP_OP[0x5] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a48, value: efefef88, mask: ffffffff <== PCOUNTER.GPC_DOM[0].START_SRC[0x5] => { 0 = 0x88 | 1 = 0xef | 2 = 0xef | 3 = 0xef }
(w) register: 180a4c, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0].START_OP[0x5] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a40, value: 87868584, mask: ffffffff <== PCOUNTER.GPC_DOM[0].PRE_SRC[0x5] => { 0 = 0x84 | 1 = 0x85 | 2 = 0x86 | 3 = 0x87 }
(w) register: 180a44, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0].PRE_OP[0x5] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a9c, value: 00000032, mask: ffffffff <== PCOUNTER.GPC_DOM[0].CTRL[0x5] => { MODE = QUAD | CTR_MODE = 0x6 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 180a40, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].PRE_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a44, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].PRE_OP[0x5] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a48, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].START_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a4c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].START_OP[0x5] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a50, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].EVENT_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a54, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].EVENT_OP[0x5] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a58, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].STOP_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a5c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].STOP_OP[0x5] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a48, value: efefef88, mask: ffffffff <== PCOUNTER.GPC_DOM[0].START_SRC[0x5] => { 0 = 0x88 | 1 = 0xef | 2 = 0xef | 3 = 0xef }
(w) register: 180a4c, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0].START_OP[0x5] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a40, value: 87868584, mask: ffffffff <== PCOUNTER.GPC_DOM[0].PRE_SRC[0x5] => { 0 = 0x84 | 1 = 0x85 | 2 = 0x86 | 3 = 0x87 }
(w) register: 180a44, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0].PRE_OP[0x5] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 505ac0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].TEX.PM_MUX_C_D => { SEL_C = 0 | SEL_D = 0 }
(r) register: 505ab8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].TEX.PM_UNKB8 => { SEL = 0 }
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 505ac0, value: 00000005, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].TEX.PM_MUX_C_D => { SEL_C = 0x5 | SEL_D = 0 }
(r) register: 505ab8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].TEX.PM_UNKB8 => { SEL = 0 }
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 505ac0, value: 80000005, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].TEX.PM_MUX_C_D => { SEL_C = 0x5 | SEL_D = 0 | ENABLE }
(w) register: 505ab8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].TEX.PM_UNKB8 => { SEL = 0 | 0x80000000 }
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 505ac0, value: 80000005, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].TEX.PM_MUX_C_D => { SEL_C = 0x5 | SEL_D = 0 | ENABLE }
(w) register: 505ab8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].TEX.PM_UNKB8 => { SEL = 0 | 0x80000000 }
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 180a6c, value: 000000cd, mask: ffffffff <== PCOUNTER.GPC_DOM[0].SWAP_SRC[0x5] => 0xcd
(w) register: 180a6c, value: 000000cd, mask: ffffffff <== PCOUNTER.GPC_DOM[0].SWAP_SRC[0x5] => 0xcd
(r) register: 180a8c, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_PRE[0x5] => 0
(r) register: 180a88, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_START[0x5] => 0
(r) register: 180a80, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_EVENT[0x5] => 0
(r) register: 180a90, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_STOP[0x5] => 0
(r) register: 180a70, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_CYCLES[0x5] => 0
(r) register: 180a8c, value: 000011c4, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_PRE[0x5] => 0x11c4
(r) register: 180a88, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_START[0x5] => 0
(r) register: 180a80, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_EVENT[0x5] => 0
(r) register: 180a90, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_STOP[0x5] => 0
(r) register: 180a70, value: 00001b46, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_CYCLES[0x5] => 0x1b46
(w) register: 180aa0, value: 00000001, mask: ffffffff <== PCOUNTER.GPC_DOM[0].QUAD_ACK_TRIGGER[0x5] => 0x1
(w) register: 180aa0, value: 00000001, mask: ffffffff <== PCOUNTER.GPC_DOM[0].QUAD_ACK_TRIGGER[0x5] => 0x1
Trace of 'tex0_cache_sector_queries' saved in file 'tex0_cache_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : tex1_cache_sector_queries 
Event Value : 4608
(w) register: 180b00, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].FILTER[0x5] => { SRC_MASK = 0 }
(w) register: 180acc, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0CC[0x5][0] => 0
(w) register: 180ad0, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0CC[0x5][0x1] => 0
(w) register: 180ad4, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0D4[0x5] => { UNK0 = 0 }
(w) register: 180ad8, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0D8[0x5][0] => 0
(w) register: 180adc, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0D8[0x5][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 180b00, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].FILTER[0x5] => { SRC_MASK = 0 }
(w) register: 180acc, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0CC[0x5][0] => 0
(w) register: 180ad0, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0CC[0x5][0x1] => 0
(w) register: 180ad4, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0D4[0x5] => { UNK0 = 0 }
(w) register: 180ad8, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0D8[0x5][0] => 0
(w) register: 180adc, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0D8[0x5][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 505ac0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].TEX.PM_MUX_C_D => { SEL_C = 0 | SEL_D = 0 }
(r) register: 505ac0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].TEX.PM_MUX_C_D => { SEL_C = 0 | SEL_D = 0 }
(w) register: 505ac0, value: 00000005, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].TEX.PM_MUX_C_D => { SEL_C = 0x5 | SEL_D = 0 }
(w) register: 505ac0, value: 00000005, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].TEX.PM_MUX_C_D => { SEL_C = 0x5 | SEL_D = 0 }
(w) register: 180a9c, value: 00000032, mask: ffffffff <== PCOUNTER.GPC_DOM[0].CTRL[0x5] => { MODE = QUAD | CTR_MODE = 0x6 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 180a40, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].PRE_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a44, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].PRE_OP[0x5] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a48, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].START_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a4c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].START_OP[0x5] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a50, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].EVENT_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a54, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].EVENT_OP[0x5] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a58, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].STOP_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a5c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].STOP_OP[0x5] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a48, value: efefef74, mask: ffffffff <== PCOUNTER.GPC_DOM[0].START_SRC[0x5] => { 0 = 0x74 | 1 = 0xef | 2 = 0xef | 3 = 0xef }
(w) register: 180a4c, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0].START_OP[0x5] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a40, value: 73727170, mask: ffffffff <== PCOUNTER.GPC_DOM[0].PRE_SRC[0x5] => { 0 = 0x70 | 1 = 0x71 | 2 = 0x72 | 3 = 0x73 }
(w) register: 180a44, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0].PRE_OP[0x5] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a9c, value: 00000032, mask: ffffffff <== PCOUNTER.GPC_DOM[0].CTRL[0x5] => { MODE = QUAD | CTR_MODE = 0x6 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 180a40, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].PRE_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a44, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].PRE_OP[0x5] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a48, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].START_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a4c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].START_OP[0x5] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a50, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].EVENT_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a54, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].EVENT_OP[0x5] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a58, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].STOP_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a5c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].STOP_OP[0x5] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a48, value: efefef74, mask: ffffffff <== PCOUNTER.GPC_DOM[0].START_SRC[0x5] => { 0 = 0x74 | 1 = 0xef | 2 = 0xef | 3 = 0xef }
(w) register: 180a4c, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0].START_OP[0x5] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a40, value: 73727170, mask: ffffffff <== PCOUNTER.GPC_DOM[0].PRE_SRC[0x5] => { 0 = 0x70 | 1 = 0x71 | 2 = 0x72 | 3 = 0x73 }
(w) register: 180a44, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0].PRE_OP[0x5] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 505ac0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].TEX.PM_MUX_C_D => { SEL_C = 0 | SEL_D = 0 }
(r) register: 505ab8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].TEX.PM_UNKB8 => { SEL = 0 }
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 505ac0, value: 00000005, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].TEX.PM_MUX_C_D => { SEL_C = 0x5 | SEL_D = 0 }
(r) register: 505ab8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].TEX.PM_UNKB8 => { SEL = 0 }
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 505ac0, value: 80000005, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].TEX.PM_MUX_C_D => { SEL_C = 0x5 | SEL_D = 0 | ENABLE }
(w) register: 505ab8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].TEX.PM_UNKB8 => { SEL = 0 | 0x80000000 }
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 505ac0, value: 80000005, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].TEX.PM_MUX_C_D => { SEL_C = 0x5 | SEL_D = 0 | ENABLE }
(w) register: 505ab8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].TEX.PM_UNKB8 => { SEL = 0 | 0x80000000 }
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 180a6c, value: 000000cd, mask: ffffffff <== PCOUNTER.GPC_DOM[0].SWAP_SRC[0x5] => 0xcd
(w) register: 180a6c, value: 000000cd, mask: ffffffff <== PCOUNTER.GPC_DOM[0].SWAP_SRC[0x5] => 0xcd
(r) register: 180a8c, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_PRE[0x5] => 0
(r) register: 180a88, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_START[0x5] => 0
(r) register: 180a80, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_EVENT[0x5] => 0
(r) register: 180a90, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_STOP[0x5] => 0
(r) register: 180a70, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_CYCLES[0x5] => 0
(r) register: 180a8c, value: 00001200, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_PRE[0x5] => 0x1200
(r) register: 180a88, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_START[0x5] => 0
(r) register: 180a80, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_EVENT[0x5] => 0
(r) register: 180a90, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_STOP[0x5] => 0
(r) register: 180a70, value: 00001a35, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_CYCLES[0x5] => 0x1a35
(w) register: 180aa0, value: 00000001, mask: ffffffff <== PCOUNTER.GPC_DOM[0].QUAD_ACK_TRIGGER[0x5] => 0x1
(w) register: 180aa0, value: 00000001, mask: ffffffff <== PCOUNTER.GPC_DOM[0].QUAD_ACK_TRIGGER[0x5] => 0x1
Trace of 'tex1_cache_sector_queries' saved in file 'tex1_cache_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : tex0_cache_sector_misses 
Event Value : 3072
(w) register: 180b00, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].FILTER[0x5] => { SRC_MASK = 0 }
(w) register: 180acc, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0CC[0x5][0] => 0
(w) register: 180ad0, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0CC[0x5][0x1] => 0
(w) register: 180ad4, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0D4[0x5] => { UNK0 = 0 }
(w) register: 180ad8, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0D8[0x5][0] => 0
(w) register: 180adc, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0D8[0x5][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 180b00, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].FILTER[0x5] => { SRC_MASK = 0 }
(w) register: 180acc, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0CC[0x5][0] => 0
(w) register: 180ad0, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0CC[0x5][0x1] => 0
(w) register: 180ad4, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0D4[0x5] => { UNK0 = 0 }
(w) register: 180ad8, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0D8[0x5][0] => 0
(w) register: 180adc, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0D8[0x5][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 505ac0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].TEX.PM_MUX_C_D => { SEL_C = 0 | SEL_D = 0 }
(r) register: 505ac0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].TEX.PM_MUX_C_D => { SEL_C = 0 | SEL_D = 0 }
(w) register: 505ac0, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].TEX.PM_MUX_C_D => { SEL_C = 0x4 | SEL_D = 0 }
(w) register: 505ac0, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].TEX.PM_MUX_C_D => { SEL_C = 0x4 | SEL_D = 0 }
(w) register: 180a9c, value: 00000032, mask: ffffffff <== PCOUNTER.GPC_DOM[0].CTRL[0x5] => { MODE = QUAD | CTR_MODE = 0x6 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 180a40, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].PRE_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a44, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].PRE_OP[0x5] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a48, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].START_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a4c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].START_OP[0x5] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a50, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].EVENT_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a54, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].EVENT_OP[0x5] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a58, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].STOP_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a5c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].STOP_OP[0x5] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a48, value: efefef84, mask: ffffffff <== PCOUNTER.GPC_DOM[0].START_SRC[0x5] => { 0 = 0x84 | 1 = 0xef | 2 = 0xef | 3 = 0xef }
(w) register: 180a4c, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0].START_OP[0x5] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a40, value: 83828180, mask: ffffffff <== PCOUNTER.GPC_DOM[0].PRE_SRC[0x5] => { 0 = 0x80 | 1 = 0x81 | 2 = 0x82 | 3 = 0x83 }
(w) register: 180a44, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0].PRE_OP[0x5] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a9c, value: 00000032, mask: ffffffff <== PCOUNTER.GPC_DOM[0].CTRL[0x5] => { MODE = QUAD | CTR_MODE = 0x6 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 180a40, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].PRE_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a44, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].PRE_OP[0x5] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a48, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].START_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a4c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].START_OP[0x5] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a50, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].EVENT_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a54, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].EVENT_OP[0x5] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a58, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].STOP_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a5c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].STOP_OP[0x5] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a48, value: efefef84, mask: ffffffff <== PCOUNTER.GPC_DOM[0].START_SRC[0x5] => { 0 = 0x84 | 1 = 0xef | 2 = 0xef | 3 = 0xef }
(w) register: 180a4c, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0].START_OP[0x5] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a40, value: 83828180, mask: ffffffff <== PCOUNTER.GPC_DOM[0].PRE_SRC[0x5] => { 0 = 0x80 | 1 = 0x81 | 2 = 0x82 | 3 = 0x83 }
(w) register: 180a44, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0].PRE_OP[0x5] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 505ac0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].TEX.PM_MUX_C_D => { SEL_C = 0 | SEL_D = 0 }
(r) register: 505ab8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].TEX.PM_UNKB8 => { SEL = 0 }
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 505ac0, value: 00000004, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].TEX.PM_MUX_C_D => { SEL_C = 0x4 | SEL_D = 0 }
(r) register: 505ab8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].TEX.PM_UNKB8 => { SEL = 0 }
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 505ac0, value: 80000004, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].TEX.PM_MUX_C_D => { SEL_C = 0x4 | SEL_D = 0 | ENABLE }
(w) register: 505ab8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].TEX.PM_UNKB8 => { SEL = 0 | 0x80000000 }
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 505ac0, value: 80000004, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].TEX.PM_MUX_C_D => { SEL_C = 0x4 | SEL_D = 0 | ENABLE }
(w) register: 505ab8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].TEX.PM_UNKB8 => { SEL = 0 | 0x80000000 }
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 180a6c, value: 000000cd, mask: ffffffff <== PCOUNTER.GPC_DOM[0].SWAP_SRC[0x5] => 0xcd
(w) register: 180a6c, value: 000000cd, mask: ffffffff <== PCOUNTER.GPC_DOM[0].SWAP_SRC[0x5] => 0xcd
(r) register: 180a8c, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_PRE[0x5] => 0
(r) register: 180a88, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_START[0x5] => 0
(r) register: 180a80, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_EVENT[0x5] => 0
(r) register: 180a90, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_STOP[0x5] => 0
(r) register: 180a70, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_CYCLES[0x5] => 0
(r) register: 180a8c, value: 00000c00, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_PRE[0x5] => 0xc00
(r) register: 180a88, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_START[0x5] => 0
(r) register: 180a80, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_EVENT[0x5] => 0
(r) register: 180a90, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_STOP[0x5] => 0
(r) register: 180a70, value: 0000193e, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_CYCLES[0x5] => 0x193e
(w) register: 180aa0, value: 00000001, mask: ffffffff <== PCOUNTER.GPC_DOM[0].QUAD_ACK_TRIGGER[0x5] => 0x1
(w) register: 180aa0, value: 00000001, mask: ffffffff <== PCOUNTER.GPC_DOM[0].QUAD_ACK_TRIGGER[0x5] => 0x1
Trace of 'tex0_cache_sector_misses' saved in file 'tex0_cache_sector_misses.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : tex1_cache_sector_misses 
Event Value : 3080
(w) register: 180b00, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].FILTER[0x5] => { SRC_MASK = 0 }
(w) register: 180acc, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0CC[0x5][0] => 0
(w) register: 180ad0, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0CC[0x5][0x1] => 0
(w) register: 180ad4, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0D4[0x5] => { UNK0 = 0 }
(w) register: 180ad8, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0D8[0x5][0] => 0
(w) register: 180adc, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0D8[0x5][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 180b00, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].FILTER[0x5] => { SRC_MASK = 0 }
(w) register: 180acc, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0CC[0x5][0] => 0
(w) register: 180ad0, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0CC[0x5][0x1] => 0
(w) register: 180ad4, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0D4[0x5] => { UNK0 = 0 }
(w) register: 180ad8, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0D8[0x5][0] => 0
(w) register: 180adc, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0D8[0x5][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 505ac0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].TEX.PM_MUX_C_D => { SEL_C = 0 | SEL_D = 0 }
(r) register: 505ac0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].TEX.PM_MUX_C_D => { SEL_C = 0 | SEL_D = 0 }
(w) register: 505ac0, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].TEX.PM_MUX_C_D => { SEL_C = 0x4 | SEL_D = 0 }
(w) register: 505ac0, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].TEX.PM_MUX_C_D => { SEL_C = 0x4 | SEL_D = 0 }
(w) register: 180a9c, value: 00000032, mask: ffffffff <== PCOUNTER.GPC_DOM[0].CTRL[0x5] => { MODE = QUAD | CTR_MODE = 0x6 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 180a40, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].PRE_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a44, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].PRE_OP[0x5] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a48, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].START_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a4c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].START_OP[0x5] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a50, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].EVENT_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a54, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].EVENT_OP[0x5] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a58, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].STOP_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a5c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].STOP_OP[0x5] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a48, value: efefef70, mask: ffffffff <== PCOUNTER.GPC_DOM[0].START_SRC[0x5] => { 0 = 0x70 | 1 = 0xef | 2 = 0xef | 3 = 0xef }
(w) register: 180a4c, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0].START_OP[0x5] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a40, value: 6f6e6d6c, mask: ffffffff <== PCOUNTER.GPC_DOM[0].PRE_SRC[0x5] => { 0 = 0x6c | 1 = 0x6d | 2 = 0x6e | 3 = 0x6f }
(w) register: 180a44, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0].PRE_OP[0x5] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a9c, value: 00000032, mask: ffffffff <== PCOUNTER.GPC_DOM[0].CTRL[0x5] => { MODE = QUAD | CTR_MODE = 0x6 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 180a40, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].PRE_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a44, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].PRE_OP[0x5] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a48, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].START_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a4c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].START_OP[0x5] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a50, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].EVENT_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a54, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].EVENT_OP[0x5] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a58, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].STOP_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a5c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].STOP_OP[0x5] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a48, value: efefef70, mask: ffffffff <== PCOUNTER.GPC_DOM[0].START_SRC[0x5] => { 0 = 0x70 | 1 = 0xef | 2 = 0xef | 3 = 0xef }
(w) register: 180a4c, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0].START_OP[0x5] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a40, value: 6f6e6d6c, mask: ffffffff <== PCOUNTER.GPC_DOM[0].PRE_SRC[0x5] => { 0 = 0x6c | 1 = 0x6d | 2 = 0x6e | 3 = 0x6f }
(w) register: 180a44, value: 0000ffff, mask: ffffffff <== PCOUNTER.GPC_DOM[0].PRE_OP[0x5] => { FUNC = 0xffff | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 505ac0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].TEX.PM_MUX_C_D => { SEL_C = 0 | SEL_D = 0 }
(r) register: 505ab8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].TEX.PM_UNKB8 => { SEL = 0 }
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 505ac0, value: 00000004, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].TEX.PM_MUX_C_D => { SEL_C = 0x4 | SEL_D = 0 }
(r) register: 505ab8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].TEX.PM_UNKB8 => { SEL = 0 }
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 505ac0, value: 80000004, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].TEX.PM_MUX_C_D => { SEL_C = 0x4 | SEL_D = 0 | ENABLE }
(w) register: 505ab8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].TEX.PM_UNKB8 => { SEL = 0 | 0x80000000 }
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 505ac0, value: 80000004, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].TEX.PM_MUX_C_D => { SEL_C = 0x4 | SEL_D = 0 | ENABLE }
(w) register: 505ab8, value: 80000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].TEX.PM_UNKB8 => { SEL = 0 | 0x80000000 }
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 180a6c, value: 000000cd, mask: ffffffff <== PCOUNTER.GPC_DOM[0].SWAP_SRC[0x5] => 0xcd
(w) register: 180a6c, value: 000000cd, mask: ffffffff <== PCOUNTER.GPC_DOM[0].SWAP_SRC[0x5] => 0xcd
(r) register: 180a8c, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_PRE[0x5] => 0
(r) register: 180a88, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_START[0x5] => 0
(r) register: 180a80, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_EVENT[0x5] => 0
(r) register: 180a90, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_STOP[0x5] => 0
(r) register: 180a70, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_CYCLES[0x5] => 0
(r) register: 180a8c, value: 00000c08, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_PRE[0x5] => 0xc08
(r) register: 180a88, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_START[0x5] => 0
(r) register: 180a80, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_EVENT[0x5] => 0
(r) register: 180a90, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_STOP[0x5] => 0
(r) register: 180a70, value: 00001968, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_CYCLES[0x5] => 0x1968
(w) register: 180aa0, value: 00000001, mask: ffffffff <== PCOUNTER.GPC_DOM[0].QUAD_ACK_TRIGGER[0x5] => 0x1
(w) register: 180aa0, value: 00000001, mask: ffffffff <== PCOUNTER.GPC_DOM[0].QUAD_ACK_TRIGGER[0x5] => 0x1
Trace of 'tex1_cache_sector_misses' saved in file 'tex1_cache_sector_misses.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : elapsed_cycles_sm 
Event Value : 6470
(w) register: 180b00, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].FILTER[0x5] => { SRC_MASK = 0 }
(w) register: 180acc, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0CC[0x5][0] => 0
(w) register: 180ad0, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0CC[0x5][0x1] => 0
(w) register: 180ad4, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0D4[0x5] => { UNK0 = 0 }
(w) register: 180ad8, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0D8[0x5][0] => 0
(w) register: 180adc, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0D8[0x5][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 180b00, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].FILTER[0x5] => { SRC_MASK = 0 }
(w) register: 180acc, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0CC[0x5][0] => 0
(w) register: 180ad0, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0CC[0x5][0x1] => 0
(w) register: 180ad4, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0D4[0x5] => { UNK0 = 0 }
(w) register: 180ad8, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0D8[0x5][0] => 0
(w) register: 180adc, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].UNK0D8[0x5][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 180a9c, value: 00000002, mask: ffffffff <== PCOUNTER.GPC_DOM[0].CTRL[0x5] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 180a40, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].PRE_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a44, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].PRE_OP[0x5] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a48, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].START_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a4c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].START_OP[0x5] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a50, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].EVENT_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a54, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].EVENT_OP[0x5] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a58, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].STOP_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a5c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].STOP_OP[0x5] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a9c, value: 00000002, mask: ffffffff <== PCOUNTER.GPC_DOM[0].CTRL[0x5] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 180a40, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].PRE_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a44, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].PRE_OP[0x5] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a48, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].START_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a4c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].START_OP[0x5] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a50, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].EVENT_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a54, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].EVENT_OP[0x5] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a58, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].STOP_SRC[0x5] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 180a5c, value: 00000000, mask: ffffffff <== PCOUNTER.GPC_DOM[0].STOP_OP[0x5] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 180a6c, value: 000000cd, mask: ffffffff <== PCOUNTER.GPC_DOM[0].SWAP_SRC[0x5] => 0xcd
(w) register: 180a6c, value: 000000cd, mask: ffffffff <== PCOUNTER.GPC_DOM[0].SWAP_SRC[0x5] => 0xcd
(r) register: 180a8c, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_PRE[0x5] => 0
(r) register: 180a88, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_START[0x5] => 0
(r) register: 180a80, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_EVENT[0x5] => 0
(r) register: 180a90, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_STOP[0x5] => 0
(r) register: 180a70, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_CYCLES[0x5] => 0
(r) register: 180a8c, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_PRE[0x5] => 0
(r) register: 180a88, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_START[0x5] => 0
(r) register: 180a80, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_EVENT[0x5] => 0
(r) register: 180a90, value: 00000000, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_STOP[0x5] => 0
(r) register: 180a70, value: 00001946, mask: 00000000 ==> PCOUNTER.GPC_DOM[0].CTR_CYCLES[0x5] => 0x1946
(w) register: 180aa0, value: 00000001, mask: ffffffff <== PCOUNTER.GPC_DOM[0].QUAD_ACK_TRIGGER[0x5] => 0x1
(w) register: 180aa0, value: 00000001, mask: ffffffff <== PCOUNTER.GPC_DOM[0].QUAD_ACK_TRIGGER[0x5] => 0x1
Trace of 'elapsed_cycles_sm' saved in file 'elapsed_cycles_sm.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : fb_subp0_read_sectors 
Event Value : 8
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1a00cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0][0] => 0
(w) register: 1a00d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0][0x1] => 0
(w) register: 1a00d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0] => { UNK0 = 0 }
(w) register: 1a00d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0][0] => 0
(w) register: 1a00dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1a00cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0][0] => 0
(w) register: 1a00d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0][0x1] => 0
(w) register: 1a00d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0] => { UNK0 = 0 }
(w) register: 1a00d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0][0] => 0
(w) register: 1a00dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 10f100, value: 00000000, mask: 00000000 ==> PBFB_BROADCAST.PM_UNK100 => 0
(r) register: 10f100, value: 00000000, mask: 00000000 ==> PBFB_BROADCAST.PM_UNK100 => 0
(w) register: 10f100, value: 00000110, mask: ffffffff <== PBFB_BROADCAST.PM_UNK100 => 0x110
(w) register: 10f100, value: 00000110, mask: ffffffff <== PBFB_BROADCAST.PM_UNK100 => 0x110
(w) register: 1a009c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: efefef00, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0xef | 2 = 0xef | 3 = 0xef }
(w) register: 1a005c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: efefef00, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0xef | 2 = 0xef | 3 = 0xef }
(w) register: 1a005c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 10f100, value: 00000000, mask: 00000000 ==> PBFB_BROADCAST.PM_UNK100 => 0
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 10f100, value: 00000110, mask: 00000000 ==> PBFB_BROADCAST.PM_UNK100 => 0x110
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 10f100, value: 00000111, mask: ffffffff <== PBFB_BROADCAST.PM_UNK100 => 0x111
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 10f100, value: 00000111, mask: ffffffff <== PBFB_BROADCAST.PM_UNK100 => 0x111
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a006c, value: 0000002d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x2d
(w) register: 1a006c, value: 0000002d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x2d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000008, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0x8
(r) register: 1a0070, value: 0000176b, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x176b
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'fb_subp0_read_sectors' saved in file 'fb_subp0_read_sectors.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : fb_subp1_read_sectors 
Event Value : 0
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1a00cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0][0] => 0
(w) register: 1a00d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0][0x1] => 0
(w) register: 1a00d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0] => { UNK0 = 0 }
(w) register: 1a00d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0][0] => 0
(w) register: 1a00dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1a00cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0][0] => 0
(w) register: 1a00d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0][0x1] => 0
(w) register: 1a00d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0] => { UNK0 = 0 }
(w) register: 1a00d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0][0] => 0
(w) register: 1a00dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 10f100, value: 00000000, mask: 00000000 ==> PBFB_BROADCAST.PM_UNK100 => 0
(r) register: 10f100, value: 00000000, mask: 00000000 ==> PBFB_BROADCAST.PM_UNK100 => 0
(w) register: 10f100, value: 00000120, mask: ffffffff <== PBFB_BROADCAST.PM_UNK100 => 0x120
(w) register: 10f100, value: 00000120, mask: ffffffff <== PBFB_BROADCAST.PM_UNK100 => 0x120
(w) register: 1a009c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: efefef00, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0xef | 2 = 0xef | 3 = 0xef }
(w) register: 1a005c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: efefef00, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0xef | 2 = 0xef | 3 = 0xef }
(w) register: 1a005c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 10f100, value: 00000000, mask: 00000000 ==> PBFB_BROADCAST.PM_UNK100 => 0
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 10f100, value: 00000120, mask: 00000000 ==> PBFB_BROADCAST.PM_UNK100 => 0x120
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 10f100, value: 00000121, mask: ffffffff <== PBFB_BROADCAST.PM_UNK100 => 0x121
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 10f100, value: 00000121, mask: ffffffff <== PBFB_BROADCAST.PM_UNK100 => 0x121
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a006c, value: 0000002d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x2d
(w) register: 1a006c, value: 0000002d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x2d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 000018d8, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x18d8
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'fb_subp1_read_sectors' saved in file 'fb_subp1_read_sectors.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : fb_subp0_write_sectors 
Event Value : 1312
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1a00cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0][0] => 0
(w) register: 1a00d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0][0x1] => 0
(w) register: 1a00d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0] => { UNK0 = 0 }
(w) register: 1a00d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0][0] => 0
(w) register: 1a00dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1a00cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0][0] => 0
(w) register: 1a00d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0][0x1] => 0
(w) register: 1a00d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0] => { UNK0 = 0 }
(w) register: 1a00d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0][0] => 0
(w) register: 1a00dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 10f100, value: 00000000, mask: 00000000 ==> PBFB_BROADCAST.PM_UNK100 => 0
(r) register: 10f100, value: 00000000, mask: 00000000 ==> PBFB_BROADCAST.PM_UNK100 => 0
(w) register: 10f100, value: 00000110, mask: ffffffff <== PBFB_BROADCAST.PM_UNK100 => 0x110
(w) register: 10f100, value: 00000110, mask: ffffffff <== PBFB_BROADCAST.PM_UNK100 => 0x110
(w) register: 1a009c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: efefef01, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0x1 | 1 = 0xef | 2 = 0xef | 3 = 0xef }
(w) register: 1a005c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: efefef01, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0x1 | 1 = 0xef | 2 = 0xef | 3 = 0xef }
(w) register: 1a005c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 10f100, value: 00000000, mask: 00000000 ==> PBFB_BROADCAST.PM_UNK100 => 0
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 10f100, value: 00000110, mask: 00000000 ==> PBFB_BROADCAST.PM_UNK100 => 0x110
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 10f100, value: 00000111, mask: ffffffff <== PBFB_BROADCAST.PM_UNK100 => 0x111
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 10f100, value: 00000111, mask: ffffffff <== PBFB_BROADCAST.PM_UNK100 => 0x111
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a006c, value: 0000002d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x2d
(w) register: 1a006c, value: 0000002d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x2d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000520, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0x520
(r) register: 1a0070, value: 000018f2, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x18f2
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'fb_subp0_write_sectors' saved in file 'fb_subp0_write_sectors.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : fb_subp1_write_sectors 
Event Value : 1316
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1a00cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0][0] => 0
(w) register: 1a00d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0][0x1] => 0
(w) register: 1a00d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0] => { UNK0 = 0 }
(w) register: 1a00d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0][0] => 0
(w) register: 1a00dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0100, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0] => { SRC_MASK = 0 }
(w) register: 1a00cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0][0] => 0
(w) register: 1a00d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0][0x1] => 0
(w) register: 1a00d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0] => { UNK0 = 0 }
(w) register: 1a00d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0][0] => 0
(w) register: 1a00dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 10f100, value: 00000000, mask: 00000000 ==> PBFB_BROADCAST.PM_UNK100 => 0
(r) register: 10f100, value: 00000000, mask: 00000000 ==> PBFB_BROADCAST.PM_UNK100 => 0
(w) register: 10f100, value: 00000120, mask: ffffffff <== PBFB_BROADCAST.PM_UNK100 => 0x120
(w) register: 10f100, value: 00000120, mask: ffffffff <== PBFB_BROADCAST.PM_UNK100 => 0x120
(w) register: 1a009c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: efefef01, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0x1 | 1 = 0xef | 2 = 0xef | 3 = 0xef }
(w) register: 1a005c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a009c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0040, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0044, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0048, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a004c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0050, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0054, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a005c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0058, value: efefef01, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0] => { 0 = 0x1 | 1 = 0xef | 2 = 0xef | 3 = 0xef }
(w) register: 1a005c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 10f100, value: 00000000, mask: 00000000 ==> PBFB_BROADCAST.PM_UNK100 => 0
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 10f100, value: 00000120, mask: 00000000 ==> PBFB_BROADCAST.PM_UNK100 => 0x120
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 10f100, value: 00000121, mask: ffffffff <== PBFB_BROADCAST.PM_UNK100 => 0x121
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 10f100, value: 00000121, mask: ffffffff <== PBFB_BROADCAST.PM_UNK100 => 0x121
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a006c, value: 0000002d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x2d
(w) register: 1a006c, value: 0000002d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0] => 0x2d
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0
(r) register: 1a0070, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0
(r) register: 1a008c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0] => 0
(r) register: 1a0088, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0] => 0
(r) register: 1a0080, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0] => 0
(r) register: 1a0090, value: 00000524, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0] => 0x524
(r) register: 1a0070, value: 0000173f, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0] => 0x173f
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
(w) register: 1a00a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0] => 0x1
Trace of 'fb_subp1_write_sectors' saved in file 'fb_subp1_write_sectors.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : gld_inst_8bit 
Event Value : 0
(w) register: 505e04, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x1 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x1 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'gld_inst_8bit' saved in file 'gld_inst_8bit.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : gld_inst_16bit 
Event Value : 0
(w) register: 505e04, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x1 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x1 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'gld_inst_16bit' saved in file 'gld_inst_16bit.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : gld_inst_32bit 
Event Value : 24736
(w) register: 505e04, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x1 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x1 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00001840, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00001840, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0x1840
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00001820, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00001800, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'gld_inst_32bit' saved in file 'gld_inst_32bit.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : gld_inst_64bit 
Event Value : 0
(w) register: 505e04, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x1 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x1 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'gld_inst_64bit' saved in file 'gld_inst_64bit.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : gld_inst_128bit 
Event Value : 0
(w) register: 505e04, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x1 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x1 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'gld_inst_128bit' saved in file 'gld_inst_128bit.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : gst_inst_8bit 
Event Value : 0
(w) register: 505e04, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x1 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x1 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'gst_inst_8bit' saved in file 'gst_inst_8bit.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : gst_inst_16bit 
Event Value : 0
(w) register: 505e04, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x1 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x1 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'gst_inst_16bit' saved in file 'gst_inst_16bit.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : gst_inst_32bit 
Event Value : 12288
(w) register: 505e04, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x1 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x1 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000c00, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000c00, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0xc00
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000c00, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000c00, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'gst_inst_32bit' saved in file 'gst_inst_32bit.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : gst_inst_64bit 
Event Value : 0
(w) register: 505e04, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x1 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x1 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'gst_inst_64bit' saved in file 'gst_inst_64bit.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : gst_inst_128bit 
Event Value : 0
(w) register: 505e04, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x1 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x1 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'gst_inst_128bit' saved in file 'gst_inst_128bit.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : prof_trigger_00 
Event Value : 0
(w) register: 505e04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'prof_trigger_00' saved in file 'prof_trigger_00.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : prof_trigger_01 
Event Value : 0
(w) register: 505e04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'prof_trigger_01' saved in file 'prof_trigger_01.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : prof_trigger_02 
Event Value : 0
(w) register: 505e04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000008, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000008, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'prof_trigger_02' saved in file 'prof_trigger_02.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : prof_trigger_03 
Event Value : 0
(w) register: 505e04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 0000000c, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 0000000c, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'prof_trigger_03' saved in file 'prof_trigger_03.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : prof_trigger_04 
Event Value : 0
(w) register: 505e04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000010, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000010, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'prof_trigger_04' saved in file 'prof_trigger_04.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : prof_trigger_05 
Event Value : 0
(w) register: 505e04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000014, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000014, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'prof_trigger_05' saved in file 'prof_trigger_05.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : prof_trigger_06 
Event Value : 0
(w) register: 505e04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000018, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000018, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'prof_trigger_06' saved in file 'prof_trigger_06.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : prof_trigger_07 
Event Value : 0
(w) register: 505e04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 0000001c, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 0000001c, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'prof_trigger_07' saved in file 'prof_trigger_07.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : warps_launched 
Event Value : 384
(w) register: 505e04, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x2 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000008, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x2 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000008, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000060, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000060, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0x60
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000060, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000060, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'warps_launched' saved in file 'warps_launched.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : inst_issued0 
Event Value : 11672
(w) register: 505e04, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x2 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 0000000c, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x2 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 0000000c, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000b5e, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000b62, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0xb62
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000b70, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000b68, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'inst_issued0' saved in file 'inst_issued0.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : inst_issued1 
Event Value : 7424
(w) register: 505e04, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x2 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000010, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x2 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000010, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000740, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000740, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0x740
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000740, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000740, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'inst_issued1' saved in file 'inst_issued1.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : inst_issued2 
Event Value : 387
(w) register: 505e04, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x2 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000014, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x2 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000014, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000061, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000061, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0x61
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000061, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000060, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'inst_issued2' saved in file 'inst_issued2.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : inst_executed 
Event Value : 8167
(w) register: 505e04, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x2 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000003, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x3 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000398, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x2 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000003, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x3 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000398, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 000007fd, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 000007fd, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0x7fd
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 000007fd, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 000007f0, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000003, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x3 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000003, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x3 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'inst_executed' saved in file 'inst_executed.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : thread_inst_executed 
Event Value : 261136
(w) register: 505e04, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x4 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 0000003f, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x3f | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 29062080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x4 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 0000003f, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x3f | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 29062080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00007fd0, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00007fd0, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0x7fd0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00007f68, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00007f00, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 0000003f, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x3f | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 0000003f, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x3f | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'thread_inst_executed' saved in file 'thread_inst_executed.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : not_predicated_off_thread_inst_executed 
Event Value : 245760
(w) register: 505e04, value: 00000005, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x5 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 0000003f, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x3f | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 29062080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 00000005, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x5 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 0000003f, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x3f | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 29062080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00007800, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00007800, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0x7800
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00007800, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00007800, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 0000003f, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x3f | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 0000003f, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x3f | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'not_predicated_off_thread_inst_executed' saved in file 'not_predicated_off_thread_inst_executed.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : local_store 
Event Value : 0
(w) register: 505e04, value: 00000013, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x13 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 00000013, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x13 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'local_store' saved in file 'local_store.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : local_load 
Event Value : 0
(w) register: 505e04, value: 00000013, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x13 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 00000013, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x13 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'local_load' saved in file 'local_load.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : shared_load 
Event Value : 0
(w) register: 505e04, value: 00000013, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x13 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000008, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 00000013, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x13 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000008, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'shared_load' saved in file 'shared_load.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : shared_store 
Event Value : 0
(w) register: 505e04, value: 00000013, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x13 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 0000000c, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 00000013, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x13 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 0000000c, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'shared_store' saved in file 'shared_store.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : shared_atom_cas 
Event Value : 0
(w) register: 505e04, value: 00000013, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x13 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000010, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 00000013, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x13 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000010, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'shared_atom_cas' saved in file 'shared_atom_cas.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : shared_atom 
Event Value : 0
(w) register: 505e04, value: 00000013, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x13 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000014, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 00000013, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x13 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000014, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'shared_atom' saved in file 'shared_atom.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : global_atom_cas 
Event Value : 0
(w) register: 505e04, value: 00000014, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x14 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 00000014, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x14 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'global_atom_cas' saved in file 'global_atom_cas.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : atom_count 
Event Value : 0
(w) register: 505e04, value: 00000014, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x14 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 00000014, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x14 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'atom_count' saved in file 'atom_count.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : gred_count 
Event Value : 0
(w) register: 505e04, value: 00000014, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x14 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000008, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 00000014, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x14 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000008, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'gred_count' saved in file 'gred_count.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : global_load 
Event Value : 784
(w) register: 505e04, value: 00000014, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x14 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 0000000c, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 00000014, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x14 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 0000000c, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 000000c4, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 000000c4, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0xc4
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 000000c4, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 000000c4, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'global_load' saved in file 'global_load.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : global_store 
Event Value : 384
(w) register: 505e04, value: 00000014, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x14 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000010, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 00000014, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x14 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000010, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000060, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000060, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0x60
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000060, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000060, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'global_store' saved in file 'global_store.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : divergent_branch 
Event Value : 0
(w) register: 505e04, value: 0000001a, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x1a | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 0000001a, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x1a | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'divergent_branch' saved in file 'divergent_branch.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : branch 
Event Value : 768
(w) register: 505e04, value: 0000001a, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x1a | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000010, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(w) register: 505e04, value: 0000001a, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0x1a | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f30, value: 00000010, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x130
(w) register: 505e5c, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP | 0x2 }
(w) register: 505e58, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(w) register: 505e00, value: 00008080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x8080 }
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505ef0, value: 000000c0, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(r) register: 505ef4, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(r) register: 505ef8, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(r) register: 505efc, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(r) register: 505e74, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505f00, value: 000000c0, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0xc0
(r) register: 505f04, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x104
(r) register: 505f08, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x108
(r) register: 505f0c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(r) register: 505e78, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505f10, value: 000000c0, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x110
(r) register: 505f14, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x114
(r) register: 505f18, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x118
(r) register: 505f1c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(r) register: 505e7c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(r) register: 505f20, value: 000000c0, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x120
(r) register: 505f24, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x124
(r) register: 505f28, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(r) register: 505f2c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(r) register: 505e80, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'branch' saved in file 'branch.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : active_cycles 
Event Value : 4930
(w) register: 505e04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f40, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x140
(w) register: 505e5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP }
(w) register: 505e58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0x2
(w) register: 505e04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f40, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x140
(w) register: 505e5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP }
(w) register: 505e58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0x2
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00000080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x80 }
(w) register: 505e00, value: 00000080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x80 }
(r) register: 505e94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x94
(r) register: 505e84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(r) register: 505e88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(r) register: 505e8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(r) register: 505e90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(r) register: 505e94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x94
(r) register: 505e94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x94
(r) register: 505e84, value: 00001342, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0x1342
(r) register: 505e88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(r) register: 505e8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(r) register: 505e90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(r) register: 505e94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'active_cycles' saved in file 'active_cycles.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : active_warps 
Event Value : 252672
(w) register: 505e04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00030003, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0x3 | 1 = 0x3 }
(w) register: 505e6c, value: 00000003, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0x3 | 1 = 0 }
(w) register: 505f40, value: 00000188, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x140
(w) register: 505f44, value: 00000290, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x144
(w) register: 505f48, value: 00000398, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x148
(w) register: 505e5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP }
(w) register: 505e58, value: 00000222, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0x222
(w) register: 505e04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00030003, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0x3 | 1 = 0x3 }
(w) register: 505e6c, value: 00000003, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0x3 | 1 = 0 }
(w) register: 505f40, value: 00000188, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x140
(w) register: 505f44, value: 00000290, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x144
(w) register: 505f48, value: 00000398, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x148
(w) register: 505e5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP }
(w) register: 505e58, value: 00000222, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0x222
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00000080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x80 }
(w) register: 505e00, value: 00000080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x80 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000080, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x80 }
(w) register: 505e00, value: 00000080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x80 }
(w) register: 505e00, value: 00000080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x80 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000080, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x80 }
(w) register: 505e00, value: 00000080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x80 }
(w) register: 505e00, value: 00000080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x80 }
(r) register: 505e94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x94
(r) register: 505e84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(r) register: 505e88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(r) register: 505e8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(r) register: 505e90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(r) register: 505e94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x94
(r) register: 505e94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x94
(r) register: 505e84, value: 00001250, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0x1250
(r) register: 505e88, value: 00001738, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0x1738
(r) register: 505e8c, value: 000017e5, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0x17e5
(r) register: 505e90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(r) register: 505e94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00030003, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0x3 | 1 = 0x3 }
(w) register: 505e6c, value: 00000003, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0x3 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00030003, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0x3 | 1 = 0x3 }
(w) register: 505e6c, value: 00000003, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0x3 | 1 = 0 }
Trace of 'active_warps' saved in file 'active_warps.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : active_ctas 
Event Value : 34126
(w) register: 505e04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0x1 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 0000003f, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0x3f | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f40, value: 29062080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x140
(w) register: 505e5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP }
(w) register: 505e58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0x2
(w) register: 505e04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0x1 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 0000003f, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0x3f | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f40, value: 29062080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x140
(w) register: 505e5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP }
(w) register: 505e58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0x2
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00000080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x80 }
(w) register: 505e00, value: 00000080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x80 }
(r) register: 505e94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x94
(r) register: 505e84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(r) register: 505e88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(r) register: 505e8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(r) register: 505e90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(r) register: 505e94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x94
(r) register: 505e94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x94
(r) register: 505e84, value: 0000854e, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0x854e
(r) register: 505e88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(r) register: 505e8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(r) register: 505e90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(r) register: 505e94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 0000003f, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0x3f | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 0000003f, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0x3f | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'active_ctas' saved in file 'active_ctas.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : sm_cta_launched 
Event Value : 49
(w) register: 505e04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0x1 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f40, value: 00000018, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x140
(w) register: 505e5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP }
(w) register: 505e58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0x2
(w) register: 505e04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0x1 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f40, value: 00000018, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x140
(w) register: 505e5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP }
(w) register: 505e58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0x2
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00000080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x80 }
(w) register: 505e00, value: 00000080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x80 }
(r) register: 505e94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x94
(r) register: 505e84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(r) register: 505e88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(r) register: 505e8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(r) register: 505e90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(r) register: 505e94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x94
(r) register: 505e94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x94
(r) register: 505e84, value: 00000031, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0x31
(r) register: 505e88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(r) register: 505e8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(r) register: 505e90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(r) register: 505e94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'sm_cta_launched' saved in file 'sm_cta_launched.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : shared_ld_bank_conflict 
Event Value : 0
(w) register: 505e04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 0000000e, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0xe | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f40, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x140
(w) register: 505e5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP }
(w) register: 505e58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0x2
(w) register: 505e04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 0000000e, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0xe | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f40, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x140
(w) register: 505e5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP }
(w) register: 505e58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0x2
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00800080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x800080 }
(w) register: 505e00, value: 00800080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x800080 }
(r) register: 505e94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x94
(r) register: 505e84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(r) register: 505e88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(r) register: 505e8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(r) register: 505e90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(r) register: 505e94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x94
(r) register: 505e94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x94
(r) register: 505e84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(r) register: 505e88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(r) register: 505e8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(r) register: 505e90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(r) register: 505e94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'shared_ld_bank_conflict' saved in file 'shared_ld_bank_conflict.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : shared_st_bank_conflict 
Event Value : 0
(w) register: 505e04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 0000000e, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0xe | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f40, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x140
(w) register: 505e5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP }
(w) register: 505e58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0x2
(w) register: 505e04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 0000000e, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0xe | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f40, value: 00000004, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x140
(w) register: 505e5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP }
(w) register: 505e58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0x2
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00800080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x800080 }
(w) register: 505e00, value: 00800080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x800080 }
(r) register: 505e94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x94
(r) register: 505e84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(r) register: 505e88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(r) register: 505e8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(r) register: 505e90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(r) register: 505e94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x94
(r) register: 505e94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x94
(r) register: 505e84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(r) register: 505e88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(r) register: 505e8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(r) register: 505e90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(r) register: 505e94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'shared_st_bank_conflict' saved in file 'shared_st_bank_conflict.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : shared_ld_transactions 
Event Value : 0
(w) register: 505e04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 0000000e, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0xe | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f40, value: 00000008, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x140
(w) register: 505e5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP }
(w) register: 505e58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0x2
(w) register: 505e04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 0000000e, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0xe | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f40, value: 00000008, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x140
(w) register: 505e5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP }
(w) register: 505e58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0x2
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00800080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x800080 }
(w) register: 505e00, value: 00800080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x800080 }
(r) register: 505e94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x94
(r) register: 505e84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(r) register: 505e88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(r) register: 505e8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(r) register: 505e90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(r) register: 505e94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x94
(r) register: 505e94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x94
(r) register: 505e84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(r) register: 505e88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(r) register: 505e8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(r) register: 505e90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(r) register: 505e94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'shared_ld_transactions' saved in file 'shared_ld_transactions.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : shared_st_transactions 
Event Value : 0
(w) register: 505e04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 0000000e, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0xe | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f40, value: 0000000c, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x140
(w) register: 505e5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP }
(w) register: 505e58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0x2
(w) register: 505e04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e08, value: 0000000e, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_SIGSEL[0x1] => { 0 = 0xe | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505f40, value: 0000000c, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x140
(w) register: 505e5c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MODE => { 0 = LOGOP | 1 = LOGOP | 2 = LOGOP | 3 = LOGOP | 4 = LOGOP | 5 = LOGOP | 6 = LOGOP | 7 = LOGOP }
(w) register: 505e58, value: 00000002, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.TRAP_HANDLER_PC => 0x2
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(r) register: 505e00, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 }
(w) register: 505e00, value: 00800080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x800080 }
(w) register: 505e00, value: 00800080, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_MUX => { SEL = 0 | 0x800080 }
(r) register: 505e94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x94
(r) register: 505e84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(r) register: 505e88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(r) register: 505e8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(r) register: 505e90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(r) register: 505e94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x94
(r) register: 505e94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x94
(r) register: 505e84, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(r) register: 505e88, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(r) register: 505e8c, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(r) register: 505e90, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(r) register: 505e94, value: 00000000, mask: 00000000 ==> PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
(w) register: 505ef0, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf0
(w) register: 505ef4, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf4
(w) register: 505ef8, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xf8
(w) register: 505efc, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0xfc
(w) register: 505f00, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_UNK100 => 0
(w) register: 505f04, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x104
(w) register: 505f08, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x108
(w) register: 505f0c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x10c
(w) register: 505f10, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x110
(w) register: 505f14, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x114
(w) register: 505f18, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x118
(w) register: 505f1c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x11c
(w) register: 505f20, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x120
(w) register: 505f24, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x124
(w) register: 505f28, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.VSTATUS => { UNK0 = IDLE | UNK1 = IDLE | UNK2 = IDLE | UNK3 = IDLE | UNK4 = IDLE | UNK5 = IDLE | UNK6 = IDLE | UNK7 = IDLE | UNK8 = IDLE | UNK9 = IDLE | UNK30 = 0 }
(w) register: 505f2c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x12c
(w) register: 505e74, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0] => 0
(w) register: 505e78, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x1] => 0
(w) register: 505e7c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x2] => 0
(w) register: 505e80, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x3] => 0
(w) register: 505e84, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x4] => 0
(w) register: 505e94, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP+0x94
(w) register: 505e88, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x5] => 0
(w) register: 505e8c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x6] => 0
(w) register: 505e90, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_COUNTER[0x7] => 0
(w) register: 505e60, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0] => { 0 = 0 | 1 = 0 }
(w) register: 505e64, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x1] => { 0 = 0 | 1 = 0 }
(w) register: 505e68, value: 00000001, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x2] => { 0 = 0x1 | 1 = 0 }
(w) register: 505e6c, value: 00000000, mask: ffffffff <== PGRAPH.GPC[0].TPC[0x3].MP.PM_FUNC[0x3] => { 0 = 0 | 1 = 0 }
Trace of 'shared_st_transactions' saved in file 'shared_st_transactions.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp0_write_sector_misses 
Event Value : 657
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(w) register: 140550, value: 00000060, mask: ffffffff <== PMFB[0]+0x550
(w) register: 140550, value: 00000060, mask: ffffffff <== PMFB[0]+0x550
(w) register: 1a029c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: efefef26, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0x26 | 1 = 0xef | 2 = 0xef | 3 = 0xef }
(w) register: 1a025c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a029c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: efefef26, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0x26 | 1 = 0xef | 2 = 0xef | 3 = 0xef }
(w) register: 1a025c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140550, value: 00000060, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140550, value: 00000061, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140550, value: 00000061, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0
(r) register: 1a0290, value: 00000291, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0x291
(r) register: 1a0270, value: 00001844, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0x1844
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
Trace of 'l2_subp0_write_sector_misses' saved in file 'l2_subp0_write_sector_misses.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp0_read_sector_misses 
Event Value : 8
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(w) register: 140550, value: 00000060, mask: ffffffff <== PMFB[0]+0x550
(w) register: 140550, value: 00000060, mask: ffffffff <== PMFB[0]+0x550
(w) register: 1a029c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: efefef27, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0x27 | 1 = 0xef | 2 = 0xef | 3 = 0xef }
(w) register: 1a025c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a029c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: efefef27, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0x27 | 1 = 0xef | 2 = 0xef | 3 = 0xef }
(w) register: 1a025c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140550, value: 00000060, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140550, value: 00000061, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140550, value: 00000061, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0
(r) register: 1a0290, value: 00000008, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0x8
(r) register: 1a0270, value: 00001852, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0x1852
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
Trace of 'l2_subp0_read_sector_misses' saved in file 'l2_subp0_read_sector_misses.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp1_write_sector_misses 
Event Value : 628
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(w) register: 140750, value: 00000060, mask: ffffffff <== PMFB[0]+0x750
(w) register: 140750, value: 00000060, mask: ffffffff <== PMFB[0]+0x750
(w) register: 1a029c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: efefef04, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0x4 | 1 = 0xef | 2 = 0xef | 3 = 0xef }
(w) register: 1a025c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a029c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: efefef04, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0x4 | 1 = 0xef | 2 = 0xef | 3 = 0xef }
(w) register: 1a025c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140750, value: 00000060, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140750, value: 00000061, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140750, value: 00000061, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0
(r) register: 1a0290, value: 00000274, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0x274
(r) register: 1a0270, value: 00001761, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0x1761
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
Trace of 'l2_subp1_write_sector_misses' saved in file 'l2_subp1_write_sector_misses.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp1_read_sector_misses 
Event Value : 0
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(w) register: 140750, value: 00000060, mask: ffffffff <== PMFB[0]+0x750
(w) register: 140750, value: 00000060, mask: ffffffff <== PMFB[0]+0x750
(w) register: 1a029c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: efefef05, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0x5 | 1 = 0xef | 2 = 0xef | 3 = 0xef }
(w) register: 1a025c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a029c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: efefef05, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0x5 | 1 = 0xef | 2 = 0xef | 3 = 0xef }
(w) register: 1a025c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140750, value: 00000060, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140750, value: 00000061, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140750, value: 00000061, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 00001732, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0x1732
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
Trace of 'l2_subp1_read_sector_misses' saved in file 'l2_subp1_read_sector_misses.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp0_read_tex_sector_queries 
Event Value : 1568
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(w) register: 140550, value: 00000000, mask: ffffffff <== PMFB[0]+0x550
(w) register: 140550, value: 00000000, mask: ffffffff <== PMFB[0]+0x550
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(w) register: 140550, value: 00000600, mask: ffffffff <== PMFB[0]+0x550
(w) register: 140550, value: 00000600, mask: ffffffff <== PMFB[0]+0x550
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 140550, value: 00000600, mask: 00000000 ==> PMFB[0]+0x550
(w) register: 140550, value: 00000600, mask: ffffffff <== PMFB[0]+0x550
(w) register: 140550, value: 00000600, mask: ffffffff <== PMFB[0]+0x550
(w) register: 1a029c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00203623, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0x23 | 1 = 0x36 | 2 = 0x20 | 3 = 0 }
(w) register: 1a024c, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0x8080 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 1b1a1918, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0x18 | 1 = 0x19 | 2 = 0x1a | 3 = 0x1b }
(w) register: 1a0254, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a029c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00203623, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0x23 | 1 = 0x36 | 2 = 0x20 | 3 = 0 }
(w) register: 1a024c, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0x8080 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 1b1a1918, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0x18 | 1 = 0x19 | 2 = 0x1a | 3 = 0x1b }
(w) register: 1a0254, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140550, value: 00000600, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140550, value: 00000601, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140550, value: 00000601, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140550, value: 00000601, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140550, value: 00000601, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140550, value: 00000601, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140550, value: 00000601, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140550, value: 00000601, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140550, value: 00000601, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000620, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0x620
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 0000175d, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0x175d
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
Trace of 'l2_subp0_read_tex_sector_queries' saved in file 'l2_subp0_read_tex_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp0_write_tex_sector_queries 
Event Value : 784
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(w) register: 140550, value: 00000000, mask: ffffffff <== PMFB[0]+0x550
(w) register: 140550, value: 00000000, mask: ffffffff <== PMFB[0]+0x550
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(w) register: 140550, value: 00000600, mask: ffffffff <== PMFB[0]+0x550
(w) register: 140550, value: 00000600, mask: ffffffff <== PMFB[0]+0x550
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 140550, value: 00000600, mask: 00000000 ==> PMFB[0]+0x550
(w) register: 140550, value: 00000600, mask: ffffffff <== PMFB[0]+0x550
(w) register: 140550, value: 00000600, mask: ffffffff <== PMFB[0]+0x550
(w) register: 1a029c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00203523, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0x23 | 1 = 0x35 | 2 = 0x20 | 3 = 0 }
(w) register: 1a024c, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0x8080 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 1b1a1918, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0x18 | 1 = 0x19 | 2 = 0x1a | 3 = 0x1b }
(w) register: 1a0254, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a029c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00203523, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0x23 | 1 = 0x35 | 2 = 0x20 | 3 = 0 }
(w) register: 1a024c, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0x8080 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 1b1a1918, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0x18 | 1 = 0x19 | 2 = 0x1a | 3 = 0x1b }
(w) register: 1a0254, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140550, value: 00000600, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140550, value: 00000601, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140550, value: 00000601, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140550, value: 00000601, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140550, value: 00000601, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140550, value: 00000601, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140550, value: 00000601, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140550, value: 00000601, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140550, value: 00000601, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000310, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0x310
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 00001752, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0x1752
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
Trace of 'l2_subp0_write_tex_sector_queries' saved in file 'l2_subp0_write_tex_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp0_read_tex_hit_sectors 
Event Value : 1568
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(w) register: 140550, value: 00000000, mask: ffffffff <== PMFB[0]+0x550
(w) register: 140550, value: 00000000, mask: ffffffff <== PMFB[0]+0x550
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(w) register: 140550, value: 00000600, mask: ffffffff <== PMFB[0]+0x550
(w) register: 140550, value: 00000600, mask: ffffffff <== PMFB[0]+0x550
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 140550, value: 00000600, mask: 00000000 ==> PMFB[0]+0x550
(w) register: 140550, value: 00000602, mask: ffffffff <== PMFB[0]+0x550
(w) register: 140550, value: 00000602, mask: ffffffff <== PMFB[0]+0x550
(w) register: 1a029c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 2a203623, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0x23 | 1 = 0x36 | 2 = 0x20 | 3 = 0x2a }
(w) register: 1a024c, value: 00008000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0x8000 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 1b1a1918, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0x18 | 1 = 0x19 | 2 = 0x1a | 3 = 0x1b }
(w) register: 1a0254, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a029c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 2a203623, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0x23 | 1 = 0x36 | 2 = 0x20 | 3 = 0x2a }
(w) register: 1a024c, value: 00008000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0x8000 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 1b1a1918, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0x18 | 1 = 0x19 | 2 = 0x1a | 3 = 0x1b }
(w) register: 1a0254, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140550, value: 00000602, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140550, value: 00000603, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140550, value: 00000603, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140550, value: 00000603, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140550, value: 00000603, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140550, value: 00000603, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140550, value: 00000603, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140550, value: 00000603, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140550, value: 00000603, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000620, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0x620
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 00001759, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0x1759
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
Trace of 'l2_subp0_read_tex_hit_sectors' saved in file 'l2_subp0_read_tex_hit_sectors.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp0_write_tex_hit_sectors 
Event Value : 0
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(w) register: 140550, value: 00000000, mask: ffffffff <== PMFB[0]+0x550
(w) register: 140550, value: 00000000, mask: ffffffff <== PMFB[0]+0x550
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(w) register: 140550, value: 00000600, mask: ffffffff <== PMFB[0]+0x550
(w) register: 140550, value: 00000600, mask: ffffffff <== PMFB[0]+0x550
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 140550, value: 00000600, mask: 00000000 ==> PMFB[0]+0x550
(w) register: 140550, value: 00000602, mask: ffffffff <== PMFB[0]+0x550
(w) register: 140550, value: 00000602, mask: ffffffff <== PMFB[0]+0x550
(w) register: 1a029c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 2a203523, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0x23 | 1 = 0x35 | 2 = 0x20 | 3 = 0x2a }
(w) register: 1a024c, value: 00008000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0x8000 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 1b1a1918, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0x18 | 1 = 0x19 | 2 = 0x1a | 3 = 0x1b }
(w) register: 1a0254, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a029c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 2a203523, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0x23 | 1 = 0x35 | 2 = 0x20 | 3 = 0x2a }
(w) register: 1a024c, value: 00008000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0x8000 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 1b1a1918, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0x18 | 1 = 0x19 | 2 = 0x1a | 3 = 0x1b }
(w) register: 1a0254, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140550, value: 00000602, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140550, value: 00000603, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140550, value: 00000603, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140550, value: 00000603, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140550, value: 00000603, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140550, value: 00000603, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140550, value: 00000603, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140550, value: 00000603, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140550, value: 00000603, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 0000173b, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0x173b
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
Trace of 'l2_subp0_write_tex_hit_sectors' saved in file 'l2_subp0_write_tex_hit_sectors.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp0_read_sysmem_sector_queries 
Event Value : 0
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(w) register: 140550, value: 00000000, mask: ffffffff <== PMFB[0]+0x550
(w) register: 140550, value: 00000000, mask: ffffffff <== PMFB[0]+0x550
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(w) register: 140550, value: 00000000, mask: ffffffff <== PMFB[0]+0x550
(w) register: 140550, value: 00000000, mask: ffffffff <== PMFB[0]+0x550
(w) register: 1a029c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00303623, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0x23 | 1 = 0x36 | 2 = 0x30 | 3 = 0 }
(w) register: 1a024c, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0x8080 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 1b1a1918, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0x18 | 1 = 0x19 | 2 = 0x1a | 3 = 0x1b }
(w) register: 1a0254, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a029c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00303623, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0x23 | 1 = 0x36 | 2 = 0x30 | 3 = 0 }
(w) register: 1a024c, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0x8080 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 1b1a1918, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0x18 | 1 = 0x19 | 2 = 0x1a | 3 = 0x1b }
(w) register: 1a0254, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140550, value: 00000001, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140550, value: 00000001, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140550, value: 00000001, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140550, value: 00000001, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140550, value: 00000001, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 00001854, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0x1854
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
Trace of 'l2_subp0_read_sysmem_sector_queries' saved in file 'l2_subp0_read_sysmem_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp0_write_sysmem_sector_queries 
Event Value : 0
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(w) register: 140550, value: 00000000, mask: ffffffff <== PMFB[0]+0x550
(w) register: 140550, value: 00000000, mask: ffffffff <== PMFB[0]+0x550
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(w) register: 140550, value: 00000000, mask: ffffffff <== PMFB[0]+0x550
(w) register: 140550, value: 00000000, mask: ffffffff <== PMFB[0]+0x550
(w) register: 1a029c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00303523, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0x23 | 1 = 0x35 | 2 = 0x30 | 3 = 0 }
(w) register: 1a024c, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0x8080 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 1b1a1918, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0x18 | 1 = 0x19 | 2 = 0x1a | 3 = 0x1b }
(w) register: 1a0254, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a029c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00303523, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0x23 | 1 = 0x35 | 2 = 0x30 | 3 = 0 }
(w) register: 1a024c, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0x8080 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 1b1a1918, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0x18 | 1 = 0x19 | 2 = 0x1a | 3 = 0x1b }
(w) register: 1a0254, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140550, value: 00000001, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140550, value: 00000001, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140550, value: 00000001, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140550, value: 00000001, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140550, value: 00000001, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 000017e2, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0x17e2
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
Trace of 'l2_subp0_write_sysmem_sector_queries' saved in file 'l2_subp0_write_sysmem_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp0_total_read_sector_queries 
Event Value : 1576
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(w) register: 140550, value: 00000000, mask: ffffffff <== PMFB[0]+0x550
(w) register: 140550, value: 00000000, mask: ffffffff <== PMFB[0]+0x550
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(w) register: 140550, value: 00000000, mask: ffffffff <== PMFB[0]+0x550
(w) register: 140550, value: 00000000, mask: ffffffff <== PMFB[0]+0x550
(w) register: 1a029c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00233634, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0x34 | 1 = 0x36 | 2 = 0x23 | 3 = 0 }
(w) register: 1a024c, value: 0000e0e0, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0xe0e0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 1b1a1918, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0x18 | 1 = 0x19 | 2 = 0x1a | 3 = 0x1b }
(w) register: 1a0254, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a029c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00233634, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0x34 | 1 = 0x36 | 2 = 0x23 | 3 = 0 }
(w) register: 1a024c, value: 0000e0e0, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0xe0e0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 1b1a1918, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0x18 | 1 = 0x19 | 2 = 0x1a | 3 = 0x1b }
(w) register: 1a0254, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140550, value: 00000001, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140550, value: 00000001, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140550, value: 00000001, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140550, value: 00000001, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140550, value: 00000001, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000628, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0x628
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 00001748, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0x1748
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
Trace of 'l2_subp0_total_read_sector_queries' saved in file 'l2_subp0_total_read_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp0_total_write_sector_queries 
Event Value : 784
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(w) register: 140550, value: 00000000, mask: ffffffff <== PMFB[0]+0x550
(w) register: 140550, value: 00000000, mask: ffffffff <== PMFB[0]+0x550
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(w) register: 140550, value: 00000000, mask: ffffffff <== PMFB[0]+0x550
(w) register: 140550, value: 00000000, mask: ffffffff <== PMFB[0]+0x550
(w) register: 1a029c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00233534, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0x34 | 1 = 0x35 | 2 = 0x23 | 3 = 0 }
(w) register: 1a024c, value: 0000e0e0, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0xe0e0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 1b1a1918, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0x18 | 1 = 0x19 | 2 = 0x1a | 3 = 0x1b }
(w) register: 1a0254, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a029c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00233534, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0x34 | 1 = 0x35 | 2 = 0x23 | 3 = 0 }
(w) register: 1a024c, value: 0000e0e0, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0xe0e0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 1b1a1918, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0x18 | 1 = 0x19 | 2 = 0x1a | 3 = 0x1b }
(w) register: 1a0254, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140550, value: 00000001, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140550, value: 00000001, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140550, value: 00000000, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140550, value: 00000001, mask: 00000000 ==> PMFB[0]+0x550
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140550, value: 00000001, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140550, value: 00000001, mask: ffffffff <== PMFB[0]+0x550
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000310, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0x310
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 000017ed, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0x17ed
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
Trace of 'l2_subp0_total_write_sector_queries' saved in file 'l2_subp0_total_write_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp1_read_tex_sector_queries 
Event Value : 1562
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(w) register: 140750, value: 00000000, mask: ffffffff <== PMFB[0]+0x750
(w) register: 140750, value: 00000000, mask: ffffffff <== PMFB[0]+0x750
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(w) register: 140750, value: 00000600, mask: ffffffff <== PMFB[0]+0x750
(w) register: 140750, value: 00000600, mask: ffffffff <== PMFB[0]+0x750
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 140750, value: 00000600, mask: 00000000 ==> PMFB[0]+0x750
(w) register: 140750, value: 00000600, mask: ffffffff <== PMFB[0]+0x750
(w) register: 140750, value: 00000600, mask: ffffffff <== PMFB[0]+0x750
(w) register: 1a029c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00211401, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0x1 | 1 = 0x14 | 2 = 0x21 | 3 = 0 }
(w) register: 1a024c, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0x8080 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 1f1e1d1c, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0x1c | 1 = 0x1d | 2 = 0x1e | 3 = 0x1f }
(w) register: 1a0254, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a029c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00211401, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0x1 | 1 = 0x14 | 2 = 0x21 | 3 = 0 }
(w) register: 1a024c, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0x8080 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 1f1e1d1c, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0x1c | 1 = 0x1d | 2 = 0x1e | 3 = 0x1f }
(w) register: 1a0254, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140750, value: 00000600, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140750, value: 00000601, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140750, value: 00000601, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140750, value: 00000601, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140750, value: 00000601, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140750, value: 00000601, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140750, value: 00000601, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140750, value: 00000601, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140750, value: 00000601, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 0000061a, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0x61a
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 000017ec, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0x17ec
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
Trace of 'l2_subp1_read_tex_sector_queries' saved in file 'l2_subp1_read_tex_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp1_write_tex_sector_queries 
Event Value : 784
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(w) register: 140750, value: 00000000, mask: ffffffff <== PMFB[0]+0x750
(w) register: 140750, value: 00000000, mask: ffffffff <== PMFB[0]+0x750
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(w) register: 140750, value: 00000600, mask: ffffffff <== PMFB[0]+0x750
(w) register: 140750, value: 00000600, mask: ffffffff <== PMFB[0]+0x750
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 140750, value: 00000600, mask: 00000000 ==> PMFB[0]+0x750
(w) register: 140750, value: 00000600, mask: ffffffff <== PMFB[0]+0x750
(w) register: 140750, value: 00000600, mask: ffffffff <== PMFB[0]+0x750
(w) register: 1a029c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00211301, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0x1 | 1 = 0x13 | 2 = 0x21 | 3 = 0 }
(w) register: 1a024c, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0x8080 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 1f1e1d1c, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0x1c | 1 = 0x1d | 2 = 0x1e | 3 = 0x1f }
(w) register: 1a0254, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a029c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00211301, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0x1 | 1 = 0x13 | 2 = 0x21 | 3 = 0 }
(w) register: 1a024c, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0x8080 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 1f1e1d1c, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0x1c | 1 = 0x1d | 2 = 0x1e | 3 = 0x1f }
(w) register: 1a0254, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140750, value: 00000600, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140750, value: 00000601, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140750, value: 00000601, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140750, value: 00000601, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140750, value: 00000601, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140750, value: 00000601, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140750, value: 00000601, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140750, value: 00000601, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140750, value: 00000601, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000310, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0x310
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 00001729, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0x1729
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
Trace of 'l2_subp1_write_tex_sector_queries' saved in file 'l2_subp1_write_tex_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp1_read_tex_hit_sectors 
Event Value : 1562
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(w) register: 140750, value: 00000000, mask: ffffffff <== PMFB[0]+0x750
(w) register: 140750, value: 00000000, mask: ffffffff <== PMFB[0]+0x750
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(w) register: 140750, value: 00000600, mask: ffffffff <== PMFB[0]+0x750
(w) register: 140750, value: 00000600, mask: ffffffff <== PMFB[0]+0x750
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 140750, value: 00000600, mask: 00000000 ==> PMFB[0]+0x750
(w) register: 140750, value: 00000602, mask: ffffffff <== PMFB[0]+0x750
(w) register: 140750, value: 00000602, mask: ffffffff <== PMFB[0]+0x750
(w) register: 1a029c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 08211401, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0x1 | 1 = 0x14 | 2 = 0x21 | 3 = 0x8 }
(w) register: 1a024c, value: 00008000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0x8000 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 1f1e1d1c, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0x1c | 1 = 0x1d | 2 = 0x1e | 3 = 0x1f }
(w) register: 1a0254, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a029c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 08211401, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0x1 | 1 = 0x14 | 2 = 0x21 | 3 = 0x8 }
(w) register: 1a024c, value: 00008000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0x8000 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 1f1e1d1c, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0x1c | 1 = 0x1d | 2 = 0x1e | 3 = 0x1f }
(w) register: 1a0254, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140750, value: 00000602, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140750, value: 00000603, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140750, value: 00000603, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140750, value: 00000603, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140750, value: 00000603, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140750, value: 00000603, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140750, value: 00000603, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140750, value: 00000603, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140750, value: 00000603, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 0000061a, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0x61a
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 000017bd, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0x17bd
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
Trace of 'l2_subp1_read_tex_hit_sectors' saved in file 'l2_subp1_read_tex_hit_sectors.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp1_write_tex_hit_sectors 
Event Value : 0
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(w) register: 140750, value: 00000000, mask: ffffffff <== PMFB[0]+0x750
(w) register: 140750, value: 00000000, mask: ffffffff <== PMFB[0]+0x750
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(w) register: 140750, value: 00000600, mask: ffffffff <== PMFB[0]+0x750
(w) register: 140750, value: 00000600, mask: ffffffff <== PMFB[0]+0x750
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 140750, value: 00000600, mask: 00000000 ==> PMFB[0]+0x750
(w) register: 140750, value: 00000602, mask: ffffffff <== PMFB[0]+0x750
(w) register: 140750, value: 00000602, mask: ffffffff <== PMFB[0]+0x750
(w) register: 1a029c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 08211301, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0x1 | 1 = 0x13 | 2 = 0x21 | 3 = 0x8 }
(w) register: 1a024c, value: 00008000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0x8000 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 1f1e1d1c, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0x1c | 1 = 0x1d | 2 = 0x1e | 3 = 0x1f }
(w) register: 1a0254, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a029c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 08211301, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0x1 | 1 = 0x13 | 2 = 0x21 | 3 = 0x8 }
(w) register: 1a024c, value: 00008000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0x8000 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 1f1e1d1c, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0x1c | 1 = 0x1d | 2 = 0x1e | 3 = 0x1f }
(w) register: 1a0254, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140750, value: 00000602, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140750, value: 00000603, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140750, value: 00000603, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140750, value: 00000603, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140750, value: 00000603, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140750, value: 00000603, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140750, value: 00000603, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140750, value: 00000603, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140750, value: 00000603, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 00001745, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0x1745
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
Trace of 'l2_subp1_write_tex_hit_sectors' saved in file 'l2_subp1_write_tex_hit_sectors.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp1_read_sysmem_sector_queries 
Event Value : 0
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(w) register: 140750, value: 00000000, mask: ffffffff <== PMFB[0]+0x750
(w) register: 140750, value: 00000000, mask: ffffffff <== PMFB[0]+0x750
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(w) register: 140750, value: 00000000, mask: ffffffff <== PMFB[0]+0x750
(w) register: 140750, value: 00000000, mask: ffffffff <== PMFB[0]+0x750
(w) register: 1a029c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 000e1401, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0x1 | 1 = 0x14 | 2 = 0xe | 3 = 0 }
(w) register: 1a024c, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0x8080 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 1f1e1d1c, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0x1c | 1 = 0x1d | 2 = 0x1e | 3 = 0x1f }
(w) register: 1a0254, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a029c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 000e1401, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0x1 | 1 = 0x14 | 2 = 0xe | 3 = 0 }
(w) register: 1a024c, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0x8080 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 1f1e1d1c, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0x1c | 1 = 0x1d | 2 = 0x1e | 3 = 0x1f }
(w) register: 1a0254, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140750, value: 00000001, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140750, value: 00000001, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140750, value: 00000001, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140750, value: 00000001, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140750, value: 00000001, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 0000177e, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0x177e
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
Trace of 'l2_subp1_read_sysmem_sector_queries' saved in file 'l2_subp1_read_sysmem_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp1_write_sysmem_sector_queries 
Event Value : 0
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(w) register: 140750, value: 00000000, mask: ffffffff <== PMFB[0]+0x750
(w) register: 140750, value: 00000000, mask: ffffffff <== PMFB[0]+0x750
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(w) register: 140750, value: 00000000, mask: ffffffff <== PMFB[0]+0x750
(w) register: 140750, value: 00000000, mask: ffffffff <== PMFB[0]+0x750
(w) register: 1a029c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 000e1301, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0x1 | 1 = 0x13 | 2 = 0xe | 3 = 0 }
(w) register: 1a024c, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0x8080 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 1f1e1d1c, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0x1c | 1 = 0x1d | 2 = 0x1e | 3 = 0x1f }
(w) register: 1a0254, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a029c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 000e1301, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0x1 | 1 = 0x13 | 2 = 0xe | 3 = 0 }
(w) register: 1a024c, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0x8080 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 1f1e1d1c, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0x1c | 1 = 0x1d | 2 = 0x1e | 3 = 0x1f }
(w) register: 1a0254, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140750, value: 00000001, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140750, value: 00000001, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140750, value: 00000001, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140750, value: 00000001, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140750, value: 00000001, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 00001750, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0x1750
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
Trace of 'l2_subp1_write_sysmem_sector_queries' saved in file 'l2_subp1_write_sysmem_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp1_total_read_sector_queries 
Event Value : 1570
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(w) register: 140750, value: 00000000, mask: ffffffff <== PMFB[0]+0x750
(w) register: 140750, value: 00000000, mask: ffffffff <== PMFB[0]+0x750
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(w) register: 140750, value: 00000000, mask: ffffffff <== PMFB[0]+0x750
(w) register: 140750, value: 00000000, mask: ffffffff <== PMFB[0]+0x750
(w) register: 1a029c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00011412, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0x12 | 1 = 0x14 | 2 = 0x1 | 3 = 0 }
(w) register: 1a024c, value: 0000e0e0, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0xe0e0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 1f1e1d1c, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0x1c | 1 = 0x1d | 2 = 0x1e | 3 = 0x1f }
(w) register: 1a0254, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a029c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00011412, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0x12 | 1 = 0x14 | 2 = 0x1 | 3 = 0 }
(w) register: 1a024c, value: 0000e0e0, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0xe0e0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 1f1e1d1c, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0x1c | 1 = 0x1d | 2 = 0x1e | 3 = 0x1f }
(w) register: 1a0254, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140750, value: 00000001, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140750, value: 00000001, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140750, value: 00000001, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140750, value: 00000001, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140750, value: 00000001, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000622, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0x622
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 00001849, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0x1849
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
Trace of 'l2_subp1_total_read_sector_queries' saved in file 'l2_subp1_total_read_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp1_total_write_sector_queries 
Event Value : 784
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0300, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x1] => { SRC_MASK = 0 }
(w) register: 1a02cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0] => 0
(w) register: 1a02d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x1][0x1] => 0
(w) register: 1a02d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x1] => { UNK0 = 0 }
(w) register: 1a02d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0] => 0
(w) register: 1a02dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x1][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(w) register: 140750, value: 00000000, mask: ffffffff <== PMFB[0]+0x750
(w) register: 140750, value: 00000000, mask: ffffffff <== PMFB[0]+0x750
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(w) register: 140750, value: 00000000, mask: ffffffff <== PMFB[0]+0x750
(w) register: 140750, value: 00000000, mask: ffffffff <== PMFB[0]+0x750
(w) register: 1a029c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00011312, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0x12 | 1 = 0x13 | 2 = 0x1 | 3 = 0 }
(w) register: 1a024c, value: 0000e0e0, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0xe0e0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 1f1e1d1c, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0x1c | 1 = 0x1d | 2 = 0x1e | 3 = 0x1f }
(w) register: 1a0254, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a029c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x1] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0240, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0244, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a024c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0254, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0258, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x1] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a025c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x1] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0248, value: 00011312, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x1] => { 0 = 0x12 | 1 = 0x13 | 2 = 0x1 | 3 = 0 }
(w) register: 1a024c, value: 0000e0e0, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x1] => { FUNC = 0xe0e0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0250, value: 1f1e1d1c, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x1] => { 0 = 0x1c | 1 = 0x1d | 2 = 0x1e | 3 = 0x1f }
(w) register: 1a0254, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x1] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140750, value: 00000001, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140750, value: 00000001, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140750, value: 00000000, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140750, value: 00000001, mask: 00000000 ==> PMFB[0]+0x750
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140750, value: 00000001, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140750, value: 00000001, mask: ffffffff <== PMFB[0]+0x750
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(w) register: 1a026c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x1] => 0x6d
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0
(r) register: 1a028c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x1] => 0
(r) register: 1a0288, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x1] => 0
(r) register: 1a0280, value: 00000310, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x1] => 0x310
(r) register: 1a0290, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x1] => 0
(r) register: 1a0270, value: 00001749, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x1] => 0x1749
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
(w) register: 1a02a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x1] => 0x1
Trace of 'l2_subp1_total_write_sector_queries' saved in file 'l2_subp1_total_write_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp2_write_sector_misses 
Event Value : 652
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000060, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000060, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 1a049c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: efefef26, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0x26 | 1 = 0xef | 2 = 0xef | 3 = 0xef }
(w) register: 1a045c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a049c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: efefef26, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0x26 | 1 = 0xef | 2 = 0xef | 3 = 0xef }
(w) register: 1a045c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140950, value: 00000060, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140950, value: 00000061, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140950, value: 00000061, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0
(r) register: 1a0490, value: 0000028c, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0x28c
(r) register: 1a0470, value: 00001750, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0x1750
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
Trace of 'l2_subp2_write_sector_misses' saved in file 'l2_subp2_write_sector_misses.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp2_read_sector_misses 
Event Value : 0
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000060, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000060, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 1a049c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: efefef27, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0x27 | 1 = 0xef | 2 = 0xef | 3 = 0xef }
(w) register: 1a045c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a049c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: efefef27, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0x27 | 1 = 0xef | 2 = 0xef | 3 = 0xef }
(w) register: 1a045c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140950, value: 00000060, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140950, value: 00000061, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140950, value: 00000061, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 000018bc, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0x18bc
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
Trace of 'l2_subp2_read_sector_misses' saved in file 'l2_subp2_read_sector_misses.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp3_write_sector_misses 
Event Value : 652
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000060, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000060, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 1a049c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: efefef04, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0x4 | 1 = 0xef | 2 = 0xef | 3 = 0xef }
(w) register: 1a045c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a049c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: efefef04, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0x4 | 1 = 0xef | 2 = 0xef | 3 = 0xef }
(w) register: 1a045c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140b50, value: 00000060, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140b50, value: 00000061, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140b50, value: 00000061, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0
(r) register: 1a0490, value: 0000028c, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0x28c
(r) register: 1a0470, value: 00001735, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0x1735
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
Trace of 'l2_subp3_write_sector_misses' saved in file 'l2_subp3_write_sector_misses.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp3_read_sector_misses 
Event Value : 0
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000060, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000060, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 1a049c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: efefef05, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0x5 | 1 = 0xef | 2 = 0xef | 3 = 0xef }
(w) register: 1a045c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a049c, value: 00000002, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = SIMPLE | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: efefef05, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0x5 | 1 = 0xef | 2 = 0xef | 3 = 0xef }
(w) register: 1a045c, value: 0000aaaa, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0xaaaa | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140b50, value: 00000060, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140b50, value: 00000061, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140b50, value: 00000061, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 00001761, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0x1761
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
Trace of 'l2_subp3_read_sector_misses' saved in file 'l2_subp3_read_sector_misses.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp2_read_tex_sector_queries 
Event Value : 1552
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000600, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000600, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 140950, value: 00000600, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000600, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000600, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 1a049c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00203623, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0x23 | 1 = 0x36 | 2 = 0x20 | 3 = 0 }
(w) register: 1a044c, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0x8080 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 1b1a1918, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0x18 | 1 = 0x19 | 2 = 0x1a | 3 = 0x1b }
(w) register: 1a0454, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a049c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00203623, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0x23 | 1 = 0x36 | 2 = 0x20 | 3 = 0 }
(w) register: 1a044c, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0x8080 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 1b1a1918, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0x18 | 1 = 0x19 | 2 = 0x1a | 3 = 0x1b }
(w) register: 1a0454, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140950, value: 00000600, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140950, value: 00000601, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140950, value: 00000601, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140950, value: 00000601, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140950, value: 00000601, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140950, value: 00000601, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140950, value: 00000601, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140950, value: 00000601, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140950, value: 00000601, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000610, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0x610
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 00001724, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0x1724
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
Trace of 'l2_subp2_read_tex_sector_queries' saved in file 'l2_subp2_read_tex_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp2_write_tex_sector_queries 
Event Value : 800
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000600, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000600, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 140950, value: 00000600, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000600, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000600, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 1a049c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00203523, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0x23 | 1 = 0x35 | 2 = 0x20 | 3 = 0 }
(w) register: 1a044c, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0x8080 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 1b1a1918, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0x18 | 1 = 0x19 | 2 = 0x1a | 3 = 0x1b }
(w) register: 1a0454, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a049c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00203523, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0x23 | 1 = 0x35 | 2 = 0x20 | 3 = 0 }
(w) register: 1a044c, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0x8080 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 1b1a1918, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0x18 | 1 = 0x19 | 2 = 0x1a | 3 = 0x1b }
(w) register: 1a0454, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140950, value: 00000600, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140950, value: 00000601, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140950, value: 00000601, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140950, value: 00000601, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140950, value: 00000601, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140950, value: 00000601, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140950, value: 00000601, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140950, value: 00000601, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140950, value: 00000601, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000320, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0x320
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 00001756, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0x1756
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
Trace of 'l2_subp2_write_tex_sector_queries' saved in file 'l2_subp2_write_tex_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp2_read_tex_hit_sectors 
Event Value : 1552
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000600, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000600, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 140950, value: 00000600, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000602, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000602, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 1a049c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 2a203623, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0x23 | 1 = 0x36 | 2 = 0x20 | 3 = 0x2a }
(w) register: 1a044c, value: 00008000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0x8000 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 1b1a1918, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0x18 | 1 = 0x19 | 2 = 0x1a | 3 = 0x1b }
(w) register: 1a0454, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a049c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 2a203623, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0x23 | 1 = 0x36 | 2 = 0x20 | 3 = 0x2a }
(w) register: 1a044c, value: 00008000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0x8000 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 1b1a1918, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0x18 | 1 = 0x19 | 2 = 0x1a | 3 = 0x1b }
(w) register: 1a0454, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140950, value: 00000602, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140950, value: 00000603, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140950, value: 00000603, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140950, value: 00000603, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140950, value: 00000603, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140950, value: 00000603, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140950, value: 00000603, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140950, value: 00000603, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140950, value: 00000603, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000610, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0x610
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 00001874, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0x1874
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
Trace of 'l2_subp2_read_tex_hit_sectors' saved in file 'l2_subp2_read_tex_hit_sectors.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp2_write_tex_hit_sectors 
Event Value : 0
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000600, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000600, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 140950, value: 00000600, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000602, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000602, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 1a049c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 2a203523, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0x23 | 1 = 0x35 | 2 = 0x20 | 3 = 0x2a }
(w) register: 1a044c, value: 00008000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0x8000 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 1b1a1918, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0x18 | 1 = 0x19 | 2 = 0x1a | 3 = 0x1b }
(w) register: 1a0454, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a049c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 2a203523, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0x23 | 1 = 0x35 | 2 = 0x20 | 3 = 0x2a }
(w) register: 1a044c, value: 00008000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0x8000 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 1b1a1918, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0x18 | 1 = 0x19 | 2 = 0x1a | 3 = 0x1b }
(w) register: 1a0454, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140950, value: 00000602, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140950, value: 00000603, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140950, value: 00000603, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140950, value: 00000603, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140950, value: 00000603, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140950, value: 00000603, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140950, value: 00000603, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140950, value: 00000603, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140950, value: 00000603, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 000018dd, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0x18dd
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
Trace of 'l2_subp2_write_tex_hit_sectors' saved in file 'l2_subp2_write_tex_hit_sectors.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp2_read_sysmem_sector_queries 
Event Value : 0
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 1a049c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00303623, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0x23 | 1 = 0x36 | 2 = 0x30 | 3 = 0 }
(w) register: 1a044c, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0x8080 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 1b1a1918, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0x18 | 1 = 0x19 | 2 = 0x1a | 3 = 0x1b }
(w) register: 1a0454, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a049c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00303623, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0x23 | 1 = 0x36 | 2 = 0x30 | 3 = 0 }
(w) register: 1a044c, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0x8080 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 1b1a1918, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0x18 | 1 = 0x19 | 2 = 0x1a | 3 = 0x1b }
(w) register: 1a0454, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140950, value: 00000001, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140950, value: 00000001, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140950, value: 00000001, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140950, value: 00000001, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140950, value: 00000001, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 00001740, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0x1740
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
Trace of 'l2_subp2_read_sysmem_sector_queries' saved in file 'l2_subp2_read_sysmem_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp2_write_sysmem_sector_queries 
Event Value : 0
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 1a049c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00303523, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0x23 | 1 = 0x35 | 2 = 0x30 | 3 = 0 }
(w) register: 1a044c, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0x8080 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 1b1a1918, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0x18 | 1 = 0x19 | 2 = 0x1a | 3 = 0x1b }
(w) register: 1a0454, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a049c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00303523, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0x23 | 1 = 0x35 | 2 = 0x30 | 3 = 0 }
(w) register: 1a044c, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0x8080 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 1b1a1918, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0x18 | 1 = 0x19 | 2 = 0x1a | 3 = 0x1b }
(w) register: 1a0454, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140950, value: 00000001, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140950, value: 00000001, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140950, value: 00000001, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140950, value: 00000001, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140950, value: 00000001, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 0000174f, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0x174f
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
Trace of 'l2_subp2_write_sysmem_sector_queries' saved in file 'l2_subp2_write_sysmem_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp2_total_read_sector_queries 
Event Value : 1552
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 1a049c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00233634, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0x34 | 1 = 0x36 | 2 = 0x23 | 3 = 0 }
(w) register: 1a044c, value: 0000e0e0, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0xe0e0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 1b1a1918, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0x18 | 1 = 0x19 | 2 = 0x1a | 3 = 0x1b }
(w) register: 1a0454, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a049c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00233634, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0x34 | 1 = 0x36 | 2 = 0x23 | 3 = 0 }
(w) register: 1a044c, value: 0000e0e0, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0xe0e0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 1b1a1918, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0x18 | 1 = 0x19 | 2 = 0x1a | 3 = 0x1b }
(w) register: 1a0454, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140950, value: 00000001, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140950, value: 00000001, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140950, value: 00000001, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140950, value: 00000001, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140950, value: 00000001, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000610, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0x610
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 000017af, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0x17af
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
Trace of 'l2_subp2_total_read_sector_queries' saved in file 'l2_subp2_total_read_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp2_total_write_sector_queries 
Event Value : 800
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 140950, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 1a049c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00233534, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0x34 | 1 = 0x35 | 2 = 0x23 | 3 = 0 }
(w) register: 1a044c, value: 0000e0e0, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0xe0e0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 1b1a1918, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0x18 | 1 = 0x19 | 2 = 0x1a | 3 = 0x1b }
(w) register: 1a0454, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a049c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00233534, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0x34 | 1 = 0x35 | 2 = 0x23 | 3 = 0 }
(w) register: 1a044c, value: 0000e0e0, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0xe0e0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 1b1a1918, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0x18 | 1 = 0x19 | 2 = 0x1a | 3 = 0x1b }
(w) register: 1a0454, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140950, value: 00000001, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140950, value: 00000001, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140950, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140950, value: 00000001, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x150
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140950, value: 00000001, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140950, value: 00000001, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x150
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000320, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0x320
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 00001816, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0x1816
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
Trace of 'l2_subp2_total_write_sector_queries' saved in file 'l2_subp2_total_write_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp3_read_tex_sector_queries 
Event Value : 1552
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000600, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000600, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 140b50, value: 00000600, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000600, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000600, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 1a049c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00211401, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0x1 | 1 = 0x14 | 2 = 0x21 | 3 = 0 }
(w) register: 1a044c, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0x8080 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 1f1e1d1c, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0x1c | 1 = 0x1d | 2 = 0x1e | 3 = 0x1f }
(w) register: 1a0454, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a049c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00211401, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0x1 | 1 = 0x14 | 2 = 0x21 | 3 = 0 }
(w) register: 1a044c, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0x8080 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 1f1e1d1c, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0x1c | 1 = 0x1d | 2 = 0x1e | 3 = 0x1f }
(w) register: 1a0454, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140b50, value: 00000600, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140b50, value: 00000601, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140b50, value: 00000601, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140b50, value: 00000601, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140b50, value: 00000601, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140b50, value: 00000601, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140b50, value: 00000601, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140b50, value: 00000601, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140b50, value: 00000601, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000610, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0x610
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 0000174e, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0x174e
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
Trace of 'l2_subp3_read_tex_sector_queries' saved in file 'l2_subp3_read_tex_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp3_write_tex_sector_queries 
Event Value : 800
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000600, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000600, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 140b50, value: 00000600, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000600, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000600, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 1a049c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00211301, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0x1 | 1 = 0x13 | 2 = 0x21 | 3 = 0 }
(w) register: 1a044c, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0x8080 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 1f1e1d1c, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0x1c | 1 = 0x1d | 2 = 0x1e | 3 = 0x1f }
(w) register: 1a0454, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a049c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00211301, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0x1 | 1 = 0x13 | 2 = 0x21 | 3 = 0 }
(w) register: 1a044c, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0x8080 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 1f1e1d1c, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0x1c | 1 = 0x1d | 2 = 0x1e | 3 = 0x1f }
(w) register: 1a0454, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140b50, value: 00000600, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140b50, value: 00000601, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140b50, value: 00000601, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140b50, value: 00000601, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140b50, value: 00000601, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140b50, value: 00000601, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140b50, value: 00000601, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140b50, value: 00000601, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140b50, value: 00000601, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000320, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0x320
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 00001767, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0x1767
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
Trace of 'l2_subp3_write_tex_sector_queries' saved in file 'l2_subp3_write_tex_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp3_read_tex_hit_sectors 
Event Value : 1552
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000600, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000600, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 140b50, value: 00000600, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000602, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000602, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 1a049c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 08211401, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0x1 | 1 = 0x14 | 2 = 0x21 | 3 = 0x8 }
(w) register: 1a044c, value: 00008000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0x8000 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 1f1e1d1c, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0x1c | 1 = 0x1d | 2 = 0x1e | 3 = 0x1f }
(w) register: 1a0454, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a049c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 08211401, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0x1 | 1 = 0x14 | 2 = 0x21 | 3 = 0x8 }
(w) register: 1a044c, value: 00008000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0x8000 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 1f1e1d1c, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0x1c | 1 = 0x1d | 2 = 0x1e | 3 = 0x1f }
(w) register: 1a0454, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140b50, value: 00000602, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140b50, value: 00000603, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140b50, value: 00000603, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140b50, value: 00000603, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140b50, value: 00000603, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140b50, value: 00000603, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140b50, value: 00000603, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140b50, value: 00000603, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140b50, value: 00000603, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000610, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0x610
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 0000173b, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0x173b
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
Trace of 'l2_subp3_read_tex_hit_sectors' saved in file 'l2_subp3_read_tex_hit_sectors.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp3_write_tex_hit_sectors 
Event Value : 0
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000600, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000600, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 140b50, value: 00000600, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000602, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000602, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 1a049c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 08211301, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0x1 | 1 = 0x13 | 2 = 0x21 | 3 = 0x8 }
(w) register: 1a044c, value: 00008000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0x8000 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 1f1e1d1c, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0x1c | 1 = 0x1d | 2 = 0x1e | 3 = 0x1f }
(w) register: 1a0454, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a049c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 08211301, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0x1 | 1 = 0x13 | 2 = 0x21 | 3 = 0x8 }
(w) register: 1a044c, value: 00008000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0x8000 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 1f1e1d1c, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0x1c | 1 = 0x1d | 2 = 0x1e | 3 = 0x1f }
(w) register: 1a0454, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140b50, value: 00000602, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140b50, value: 00000603, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140b50, value: 00000603, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140b50, value: 00000603, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140b50, value: 00000603, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140b50, value: 00000603, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140b50, value: 00000603, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140b50, value: 00000603, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140b50, value: 00000603, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 000017d8, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0x17d8
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
Trace of 'l2_subp3_write_tex_hit_sectors' saved in file 'l2_subp3_write_tex_hit_sectors.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp3_read_sysmem_sector_queries 
Event Value : 0
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 1a049c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 000e1401, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0x1 | 1 = 0x14 | 2 = 0xe | 3 = 0 }
(w) register: 1a044c, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0x8080 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 1f1e1d1c, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0x1c | 1 = 0x1d | 2 = 0x1e | 3 = 0x1f }
(w) register: 1a0454, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a049c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 000e1401, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0x1 | 1 = 0x14 | 2 = 0xe | 3 = 0 }
(w) register: 1a044c, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0x8080 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 1f1e1d1c, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0x1c | 1 = 0x1d | 2 = 0x1e | 3 = 0x1f }
(w) register: 1a0454, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140b50, value: 00000001, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140b50, value: 00000001, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140b50, value: 00000001, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140b50, value: 00000001, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140b50, value: 00000001, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 00001797, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0x1797
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
Trace of 'l2_subp3_read_sysmem_sector_queries' saved in file 'l2_subp3_read_sysmem_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp3_write_sysmem_sector_queries 
Event Value : 0
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 1a049c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 000e1301, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0x1 | 1 = 0x13 | 2 = 0xe | 3 = 0 }
(w) register: 1a044c, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0x8080 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 1f1e1d1c, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0x1c | 1 = 0x1d | 2 = 0x1e | 3 = 0x1f }
(w) register: 1a0454, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a049c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 000e1301, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0x1 | 1 = 0x13 | 2 = 0xe | 3 = 0 }
(w) register: 1a044c, value: 00008080, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0x8080 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 1f1e1d1c, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0x1c | 1 = 0x1d | 2 = 0x1e | 3 = 0x1f }
(w) register: 1a0454, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140b50, value: 00000001, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140b50, value: 00000001, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140b50, value: 00000001, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140b50, value: 00000001, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140b50, value: 00000001, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 0000176a, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0x176a
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
Trace of 'l2_subp3_write_sysmem_sector_queries' saved in file 'l2_subp3_write_sysmem_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp3_total_read_sector_queries 
Event Value : 1557
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 1a049c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00011412, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0x12 | 1 = 0x14 | 2 = 0x1 | 3 = 0 }
(w) register: 1a044c, value: 0000e0e0, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0xe0e0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 1f1e1d1c, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0x1c | 1 = 0x1d | 2 = 0x1e | 3 = 0x1f }
(w) register: 1a0454, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a049c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00011412, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0x12 | 1 = 0x14 | 2 = 0x1 | 3 = 0 }
(w) register: 1a044c, value: 0000e0e0, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0xe0e0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 1f1e1d1c, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0x1c | 1 = 0x1d | 2 = 0x1e | 3 = 0x1f }
(w) register: 1a0454, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140b50, value: 00000001, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140b50, value: 00000001, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140b50, value: 00000001, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140b50, value: 00000001, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140b50, value: 00000001, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000615, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0x615
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 0000186a, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0x186a
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
Trace of 'l2_subp3_total_read_sector_queries' saved in file 'l2_subp3_total_read_sector_queries.trace'

Usage: /opt/cuda/extras/CUPTI/sample/callback_event/callback_event [device_num] [event_name]
CUDA Device Number: 0
CUDA Device Name: GeForce GTX 750
Launching kernel: blocks 196, thread/block 256
Event Name : l2_subp3_total_write_sector_queries 
Event Value : 800
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 021d38, value: 00000000, mask: 00000000 ==> PFUSE.FUSES+0xc38
(r) register: 022438, value: 00000000, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0
(r) register: 022438, value: 00000002, mask: 00000000 ==> PUNITS.DESIGN_PART_COUNT => 0x2
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(w) register: 1a0500, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].FILTER[0x2] => { SRC_MASK = 0 }
(w) register: 1a04cc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0] => 0
(w) register: 1a04d0, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0CC[0x2][0x1] => 0
(w) register: 1a04d4, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D4[0x2] => { UNK0 = 0 }
(w) register: 1a04d8, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0] => 0
(w) register: 1a04dc, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].UNK0D8[0x2][0x1] => 0
(w) register: 1b4050, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x50
(w) register: 1b4054, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x54
(w) register: 1b4058, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0x58
(w) register: 1b4000, value: 00000004, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4000, value: 00000000, mask: ffffffff <== PCOUNTER.MAIN+0
(w) register: 1b4020, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x20
(w) register: 1b4040, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x40
(w) register: 1b4028, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x28
(w) register: 1b4048, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x48
(w) register: 1b4024, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x24
(w) register: 1b4044, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x44
(w) register: 1b4008, value: 00000701, mask: ffffffff <== PCOUNTER.MAIN+0x8
(w) register: 1b4104, value: ffffffff, mask: ffffffff <== PCOUNTER.MAIN+0x104
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 140b50, value: 00000000, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 1a049c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00011312, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0x12 | 1 = 0x13 | 2 = 0x1 | 3 = 0 }
(w) register: 1a044c, value: 0000e0e0, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0xe0e0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 1f1e1d1c, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0x1c | 1 = 0x1d | 2 = 0x1e | 3 = 0x1f }
(w) register: 1a0454, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a049c, value: 0000003a, mask: ffffffff <== PCOUNTER.PART_DOM[0].CTRL[0x2] => { MODE = QUAD | CTR_MODE = 0x7 | EVENT_CTR_PERIOD = ONE | EVENT_IMPORT_MODE = CONTINUOUS | FLAG_IMPORT_MODE = CONTINUOUS | UNK9 = 0 | UNK18 = 0 | PERIODIC_PERIOD = DISABLED | QUAD_STATE = EMPTY | UNK26 = 0 | SINGLE_STATE = INACTIVE }
(w) register: 1a0440, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0444, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].PRE_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a044c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a0454, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0458, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_SRC[0x2] => { 0 = 0 | 1 = 0 | 2 = 0 | 3 = 0 }
(w) register: 1a045c, value: 00000000, mask: ffffffff <== PCOUNTER.PART_DOM[0].STOP_OP[0x2] => { FUNC = 0 | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0448, value: 00011312, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_SRC[0x2] => { 0 = 0x12 | 1 = 0x13 | 2 = 0x1 | 3 = 0 }
(w) register: 1a044c, value: 0000e0e0, mask: ffffffff <== PCOUNTER.PART_DOM[0].START_OP[0x2] => { FUNC = 0xe0e0 | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(w) register: 1a0450, value: 1f1e1d1c, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_SRC[0x2] => { 0 = 0x1c | 1 = 0x1d | 2 = 0x1e | 3 = 0x1f }
(w) register: 1a0454, value: 0000ffff, mask: ffffffff <== PCOUNTER.PART_DOM[0].EVENT_OP[0x2] => { FUNC = 0xffff | ARG3 = SRC | ARG2 = SRC2 | ARG3_SRC = SRC3 }
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(w) register: 140b50, value: 00000001, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140b50, value: 00000001, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(r) register: 140b50, value: 00000000, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 00000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 }
(r) register: 140b50, value: 00000001, mask: 00000000 ==> PMFB[0].SUBP_BROADCAST+0x350
(r) register: 40415c, value: 80000000, mask: 00000000 ==> PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140b50, value: 00000001, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 140b50, value: 00000001, mask: ffffffff <== PMFB[0].SUBP_BROADCAST+0x350
(w) register: 40415c, value: 80000000, mask: ffffffff <== PGRAPH.DISPATCH.PM_MUX => { SEL = 0 | 0x80000000 }
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(w) register: 1a046c, value: 0000006d, mask: ffffffff <== PCOUNTER.PART_DOM[0].SWAP_SRC[0x2] => 0x6d
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0
(r) register: 1a048c, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_PRE[0x2] => 0
(r) register: 1a0488, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_START[0x2] => 0
(r) register: 1a0480, value: 00000320, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_EVENT[0x2] => 0x320
(r) register: 1a0490, value: 00000000, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_STOP[0x2] => 0
(r) register: 1a0470, value: 00001882, mask: 00000000 ==> PCOUNTER.PART_DOM[0].CTR_CYCLES[0x2] => 0x1882
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
(w) register: 1a04a0, value: 00000001, mask: ffffffff <== PCOUNTER.PART_DOM[0].QUAD_ACK_TRIGGER[0x2] => 0x1
Trace of 'l2_subp3_total_write_sector_queries' saved in file 'l2_subp3_total_write_sector_queries.trace'

